Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    THEN
    VD

Grammar

Rule 0     S' -> program
Rule 1     cte_f -> CTE_I DOT CTE_I
Rule 2     program -> PROGRAM ID punto_program COLON main
Rule 3     program -> PROGRAM ID punto_program COLON variables main
Rule 4     program -> PROGRAM ID punto_program COLON variables funciones main
Rule 5     program -> PROGRAM ID punto_program COLON funciones main
Rule 6     punto_program -> <empty>
Rule 7     main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
Rule 8     punto_generator -> <empty>
Rule 9     punto_goto_main -> <empty>
Rule 10    main_aux -> estatutos_main_multiple
Rule 11    main_aux -> empty
Rule 12    variables -> VAR punto_variables_1 SEMICOLON
Rule 13    variables -> VAR punto_variables_1 variables_aux SEMICOLON
Rule 14    punto_variables_1 -> <empty>
Rule 15    variables_aux -> tipo COLON declaracion_inicial
Rule 16    variables_aux -> tipo COLON declaracion_inicial MORE variables_aux
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> CHAR
Rule 20    declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial
Rule 21    declaracion_inicial -> dec_varaux punto_dec_var_1
Rule 22    punto_dec_var_1 -> <empty>
Rule 23    dec_varaux -> ID
Rule 24    dec_varaux -> dec_var_dimension
Rule 25    dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR
Rule 26    dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR
Rule 27    punto_is_array -> <empty>
Rule 28    punto_size -> <empty>
Rule 29    punto_dec_varaux_1 -> <empty>
Rule 30    dec_var -> ID COMMA dec_var
Rule 31    dec_var -> ID
Rule 32    dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
Rule 33    dec_var_llamada -> m_exp punto_verify_dec_param
Rule 34    punto_mas_k -> <empty>
Rule 35    punto_verify_dec_param -> <empty>
Rule 36    funciones -> funciones_aux
Rule 37    funciones -> funciones_aux funciones
Rule 38    funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
Rule 39    funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
Rule 40    punto_return_value -> <empty>
Rule 41    not_variables -> variables count_vars
Rule 42    not_variables -> empty
Rule 43    not_params -> parametros count_params
Rule 44    not_params -> empty
Rule 45    punto_end_function_return -> <empty>
Rule 46    punto_id_func -> <empty>
Rule 47    parametros -> dec_var_param COMMA parametros
Rule 48    parametros -> dec_var_param
Rule 49    dec_var_param -> tipo ID punto_push_param
Rule 50    punto_push_param -> <empty>
Rule 51    count_params -> <empty>
Rule 52    count_vars -> <empty>
Rule 53    end_func -> <empty>
Rule 54    exp_or -> t_exp punto_pop_or t_exp_or_aux
Rule 55    exp_or -> t_exp punto_pop_or
Rule 56    punto_pop_or -> <empty>
Rule 57    t_exp_or_aux -> OR punto_push_or exp_or
Rule 58    punto_push_or -> <empty>
Rule 59    t_exp -> g_exp pop_and t_exp_aux
Rule 60    t_exp -> g_exp pop_and
Rule 61    pop_and -> <empty>
Rule 62    t_exp_aux -> AND punto_push_and t_exp
Rule 63    punto_push_and -> <empty>
Rule 64    g_exp -> m_exp
Rule 65    g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional
Rule 66    punto_relacionales -> <empty>
Rule 67    punto_pop_relacional -> <empty>
Rule 68    m_exp -> termino punto_mexp_pop
Rule 69    m_exp -> termino punto_mexp_pop m_exp_aux
Rule 70    punto_mexp_pop -> <empty>
Rule 71    m_exp_aux -> PLUS punto_m_exp_push m_exp
Rule 72    m_exp_aux -> MINUS punto_m_exp_push m_exp
Rule 73    punto_m_exp_push -> <empty>
Rule 74    termino -> factor punto_termino_pop
Rule 75    termino -> factor punto_termino_pop termino_aux
Rule 76    punto_termino_pop -> <empty>
Rule 77    termino_aux -> MULTIPLY punto_termino_aux termino
Rule 78    termino_aux -> DIVIDE punto_termino_aux termino
Rule 79    punto_termino_aux -> <empty>
Rule 80    factor -> cte
Rule 81    factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
Rule 82    factor -> ID factor_push_operand
Rule 83    factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
Rule 84    factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
Rule 85    factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
Rule 86    punto_saca_fondo_falso -> <empty>
Rule 87    punto_fondo_falso -> <empty>
Rule 88    punto_fin_fondo_falso -> <empty>
Rule 89    relacionales -> LESS_THAN
Rule 90    relacionales -> GREATER_THAN
Rule 91    relacionales -> DIFFERENT
Rule 92    relacionales -> EQUAL
Rule 93    relacionales -> GREATER_EQUAL
Rule 94    relacionales -> LESS_EQUAL
Rule 95    estatutos -> estatutos_main_aux
Rule 96    estatutos -> retorno SEMICOLON
Rule 97    estatutos_main -> asignacion SEMICOLON
Rule 98    estatutos_main -> llamada SEMICOLON
Rule 99    estatutos_main -> lectura SEMICOLON
Rule 100   estatutos_main -> escritura SEMICOLON
Rule 101   estatutos_main -> decision SEMICOLON
Rule 102   estatutos_main -> repeticion SEMICOLON
Rule 103   estatutos_main_multiple -> estatutos_main estatutos_main_multiple
Rule 104   estatutos_main_multiple -> estatutos_main
Rule 105   estatutos_main_aux -> estatutos_main estatutos
Rule 106   estatutos_main_aux -> estatutos_main
Rule 107   asignacion -> vars EQUALS punto_igual m_exp punto_asignacion
Rule 108   vars -> ID punto_asignacion_var
Rule 109   vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
Rule 110   punto_dimension_2 -> <empty>
Rule 111   punto_get_size -> <empty>
Rule 112   punto_access_arr -> <empty>
Rule 113   punto_verify_arr -> <empty>
Rule 114   punto_direccion_arr -> <empty>
Rule 115   punto_asignacion_var -> <empty>
Rule 116   punto_igual -> <empty>
Rule 117   punto_asignacion -> <empty>
Rule 118   llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
Rule 119   llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
Rule 120   punto_verify_id -> <empty>
Rule 121   punto_verify_total_params -> <empty>
Rule 122   punto_end_llamada -> <empty>
Rule 123   punto_era -> <empty>
Rule 124   retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
Rule 125   punto_return -> <empty>
Rule 126   punto_read_stack -> <empty>
Rule 127   lectura -> READ LEFT_PAR lectura_var RIGHT_PAR
Rule 128   lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
Rule 129   lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand
Rule 130   punto_push_dec_var -> <empty>
Rule 131   punto_add_read_operand -> <empty>
Rule 132   escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR
Rule 133   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand
Rule 134   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand
Rule 135   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 136   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 137   punto_escritura_push -> <empty>
Rule 138   punto_write_stack -> <empty>
Rule 139   punto_add_write_operand -> <empty>
Rule 140   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 141   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 142   punto_if_exp -> <empty>
Rule 143   punto_else -> <empty>
Rule 144   punto_end_if -> <empty>
Rule 145   repeticion -> condicional
Rule 146   repeticion -> no_condicional
Rule 147   no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
Rule 148   punto_for -> <empty>
Rule 149   punto_exp_for_inf -> <empty>
Rule 150   punto_exp_for_sup -> <empty>
Rule 151   punto_end_for -> <empty>
Rule 152   condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
Rule 153   punto_while -> <empty>
Rule 154   punto_validar_exp -> <empty>
Rule 155   punto_end_while -> <empty>
Rule 156   cte -> CTE_I factor_int_push
Rule 157   cte -> cte_f factor_float_push
Rule 158   cte -> CTE_CHAR factor_char_push
Rule 159   factor_push_operand -> <empty>
Rule 160   factor_float_push -> <empty>
Rule 161   factor_int_push -> <empty>
Rule 162   factor_char_push -> <empty>
Rule 163   empty -> <empty>

Terminals, with rules where they appear

AND                  : 62
CHAR                 : 19
COLON                : 2 3 4 5 15 16
COMMA                : 20 30 32 47 128 135 136
CTE_CHAR             : 158
CTE_I                : 1 1 156
DIFFERENT            : 91
DIVIDE               : 78
DO                   : 
DOT                  : 1
ELSE                 : 141
EQUAL                : 92
EQUALS               : 107 147
FLOAT                : 18
FOR                  : 147
FUNC                 : 38 39
GREATER_EQUAL        : 93
GREATER_THAN         : 90
ID                   : 2 3 4 5 23 25 26 30 31 38 39 49 82 83 84 85 108 109 118 119 128 129 147
IF                   : 140 141
INT                  : 17
LEFT_BR              : 25 26 26 85 109
LEFT_CURL            : 7 38 39 140 141 141 147 152
LEFT_PAR             : 7 38 39 81 83 84 118 119 124 127 132 140 141 147 152
LESS_EQUAL           : 94
LESS_THAN            : 89
MAIN                 : 7
MINUS                : 72
MORE                 : 16
MULTIPLY             : 77
OR                   : 57
PLUS                 : 71
PROGRAM              : 2 3 4 5
READ                 : 127
RETURN               : 124
RIGHT_BR             : 25 26 26 85 109
RIGHT_CURL           : 7 38 39 140 141 141 147 152
RIGHT_PAR            : 7 38 39 81 83 84 118 119 124 127 132 140 141 147 152
SEMICOLON            : 12 13 96 97 98 99 100 101 102
STR                  : 133 135
THEN                 : 
TO                   : 147
VAR                  : 12 13
VD                   : 
VOID                 : 39
WHILE                : 152
WRITE                : 132
error                : 

Nonterminals, with rules where they appear

asignacion           : 97
condicional          : 145
count_params         : 43
count_vars           : 39 41
cte                  : 80
cte_f                : 157
dec_var              : 30
dec_var_dimension    : 24
dec_var_llamada      : 32 84 119
dec_var_param        : 47 48
dec_varaux           : 20 21
decision             : 101
declaracion_inicial  : 15 16 20
empty                : 11 42 44
end_func             : 39
escritura            : 100
escritura_aux        : 132 135 136
estatutos            : 38 39 105 140 141 141 147 152
estatutos_main       : 103 104 105 106
estatutos_main_aux   : 95
estatutos_main_multiple : 10 103
exp_or               : 57 81 140 141 152
factor               : 74 75
factor_char_push     : 158
factor_float_push    : 157
factor_int_push      : 156
factor_push_operand  : 82
funciones            : 4 5 37
funciones_aux        : 36 37
g_exp                : 59 60
lectura              : 99
lectura_var          : 127 128
llamada              : 98
m_exp                : 25 26 26 32 33 64 65 65 71 72 85 107 109 124 134 136 147 147
m_exp_aux            : 69
main                 : 2 3 4 5
main_aux             : 7
no_condicional       : 146
not_params           : 38 39
not_variables        : 38 39
parametros           : 43 47
pop_and              : 59 60
program              : 0
punto_access_arr     : 85 109
punto_add_read_operand : 128 129
punto_add_write_operand : 133 134 135 136
punto_asignacion     : 107
punto_asignacion_var : 85 108 109
punto_dec_var_1      : 20 21
punto_dec_varaux_1   : 
punto_dimension_2    : 
punto_direccion_arr  : 85 109
punto_else           : 141
punto_end_for        : 147
punto_end_function_return : 38
punto_end_if         : 140 141
punto_end_llamada    : 83 84 118 119
punto_end_while      : 152
punto_era            : 83 84 118 119
punto_escritura_push : 133 134 135 136
punto_exp_for_inf    : 147
punto_exp_for_sup    : 147
punto_fin_fondo_falso : 81
punto_fondo_falso    : 81 84 85 109
punto_for            : 147
punto_generator      : 7
punto_get_size       : 85 109
punto_goto_main      : 7
punto_id_func        : 38 39
punto_if_exp         : 140 141
punto_igual          : 107
punto_is_array       : 25 26
punto_m_exp_push     : 71 72
punto_mas_k          : 32
punto_mexp_pop       : 68 69
punto_pop_or         : 54 55
punto_pop_relacional : 65
punto_program        : 2 3 4 5
punto_push_and       : 62
punto_push_dec_var   : 128 129
punto_push_or        : 57
punto_push_param     : 49
punto_read_stack     : 128 129
punto_relacionales   : 65
punto_return         : 124
punto_return_value   : 38
punto_saca_fondo_falso : 84
punto_size           : 25 26 26
punto_termino_aux    : 77 78
punto_termino_pop    : 74 75
punto_validar_exp    : 152
punto_variables_1    : 12 13
punto_verify_arr     : 85 109
punto_verify_dec_param : 32 33
punto_verify_id      : 83 84 118 119
punto_verify_total_params : 84 119
punto_while          : 152
punto_write_stack    : 133 134 135 136
relacionales         : 65
repeticion           : 102
retorno              : 96
t_exp                : 54 55 62
t_exp_aux            : 59
t_exp_or_aux         : 54
termino              : 68 69 77 78
termino_aux          : 75
tipo                 : 15 16 38 49
variables            : 3 4 41
variables_aux        : 13 16
vars                 : 107

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . PROGRAM ID punto_program COLON main
    (3) program -> . PROGRAM ID punto_program COLON variables main
    (4) program -> . PROGRAM ID punto_program COLON variables funciones main
    (5) program -> . PROGRAM ID punto_program COLON funciones main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (2) program -> PROGRAM . ID punto_program COLON main
    (3) program -> PROGRAM . ID punto_program COLON variables main
    (4) program -> PROGRAM . ID punto_program COLON variables funciones main
    (5) program -> PROGRAM . ID punto_program COLON funciones main

    ID              shift and go to state 3


state 3

    (2) program -> PROGRAM ID . punto_program COLON main
    (3) program -> PROGRAM ID . punto_program COLON variables main
    (4) program -> PROGRAM ID . punto_program COLON variables funciones main
    (5) program -> PROGRAM ID . punto_program COLON funciones main
    (6) punto_program -> .

    COLON           reduce using rule 6 (punto_program -> .)

    punto_program                  shift and go to state 4

state 4

    (2) program -> PROGRAM ID punto_program . COLON main
    (3) program -> PROGRAM ID punto_program . COLON variables main
    (4) program -> PROGRAM ID punto_program . COLON variables funciones main
    (5) program -> PROGRAM ID punto_program . COLON funciones main

    COLON           shift and go to state 5


state 5

    (2) program -> PROGRAM ID punto_program COLON . main
    (3) program -> PROGRAM ID punto_program COLON . variables main
    (4) program -> PROGRAM ID punto_program COLON . variables funciones main
    (5) program -> PROGRAM ID punto_program COLON . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 6
    variables                      shift and go to state 7
    funciones                      shift and go to state 8
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 6

    (2) program -> PROGRAM ID punto_program COLON main .

    $end            reduce using rule 2 (program -> PROGRAM ID punto_program COLON main .)


state 7

    (3) program -> PROGRAM ID punto_program COLON variables . main
    (4) program -> PROGRAM ID punto_program COLON variables . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            shift and go to state 9
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 17
    funciones                      shift and go to state 18
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 8

    (5) program -> PROGRAM ID punto_program COLON funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    MAIN            shift and go to state 9

    main                           shift and go to state 19

state 9

    (7) main -> MAIN . LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    LEFT_PAR        shift and go to state 20


state 10

    (12) variables -> VAR . punto_variables_1 SEMICOLON
    (13) variables -> VAR . punto_variables_1 variables_aux SEMICOLON
    (14) punto_variables_1 -> .

    SEMICOLON       reduce using rule 14 (punto_variables_1 -> .)
    INT             reduce using rule 14 (punto_variables_1 -> .)
    FLOAT           reduce using rule 14 (punto_variables_1 -> .)
    CHAR            reduce using rule 14 (punto_variables_1 -> .)

    punto_variables_1              shift and go to state 21

state 11

    (36) funciones -> funciones_aux .
    (37) funciones -> funciones_aux . funciones
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            reduce using rule 36 (funciones -> funciones_aux .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    funciones_aux                  shift and go to state 11
    funciones                      shift and go to state 22
    tipo                           shift and go to state 12

state 12

    (38) funciones_aux -> tipo . FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    FUNC            shift and go to state 23


state 13

    (39) funciones_aux -> VOID . FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    FUNC            shift and go to state 24


state 14

    (17) tipo -> INT .

    FUNC            reduce using rule 17 (tipo -> INT .)
    COLON           reduce using rule 17 (tipo -> INT .)
    ID              reduce using rule 17 (tipo -> INT .)


state 15

    (18) tipo -> FLOAT .

    FUNC            reduce using rule 18 (tipo -> FLOAT .)
    COLON           reduce using rule 18 (tipo -> FLOAT .)
    ID              reduce using rule 18 (tipo -> FLOAT .)


state 16

    (19) tipo -> CHAR .

    FUNC            reduce using rule 19 (tipo -> CHAR .)
    COLON           reduce using rule 19 (tipo -> CHAR .)
    ID              reduce using rule 19 (tipo -> CHAR .)


state 17

    (3) program -> PROGRAM ID punto_program COLON variables main .

    $end            reduce using rule 3 (program -> PROGRAM ID punto_program COLON variables main .)


state 18

    (4) program -> PROGRAM ID punto_program COLON variables funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    MAIN            shift and go to state 9

    main                           shift and go to state 25

state 19

    (5) program -> PROGRAM ID punto_program COLON funciones main .

    $end            reduce using rule 5 (program -> PROGRAM ID punto_program COLON funciones main .)


state 20

    (7) main -> MAIN LEFT_PAR . RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    RIGHT_PAR       shift and go to state 26


state 21

    (12) variables -> VAR punto_variables_1 . SEMICOLON
    (13) variables -> VAR punto_variables_1 . variables_aux SEMICOLON
    (15) variables_aux -> . tipo COLON declaracion_inicial
    (16) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    SEMICOLON       shift and go to state 27
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    variables_aux                  shift and go to state 28
    tipo                           shift and go to state 29

state 22

    (37) funciones -> funciones_aux funciones .

    MAIN            reduce using rule 37 (funciones -> funciones_aux funciones .)


state 23

    (38) funciones_aux -> tipo FUNC . ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    ID              shift and go to state 30


state 24

    (39) funciones_aux -> VOID FUNC . ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    ID              shift and go to state 31


state 25

    (4) program -> PROGRAM ID punto_program COLON variables funciones main .

    $end            reduce using rule 4 (program -> PROGRAM ID punto_program COLON variables funciones main .)


state 26

    (7) main -> MAIN LEFT_PAR RIGHT_PAR . LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    LEFT_CURL       shift and go to state 32


state 27

    (12) variables -> VAR punto_variables_1 SEMICOLON .

    MAIN            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    VOID            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    INT             reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    FLOAT           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    CHAR            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    RETURN          reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    ID              reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    READ            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    WRITE           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    IF              reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    WHILE           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    FOR             reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)


state 28

    (13) variables -> VAR punto_variables_1 variables_aux . SEMICOLON

    SEMICOLON       shift and go to state 33


state 29

    (15) variables_aux -> tipo . COLON declaracion_inicial
    (16) variables_aux -> tipo . COLON declaracion_inicial MORE variables_aux

    COLON           shift and go to state 34


state 30

    (38) funciones_aux -> tipo FUNC ID . punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (46) punto_id_func -> .

    LEFT_PAR        reduce using rule 46 (punto_id_func -> .)

    punto_id_func                  shift and go to state 35

state 31

    (39) funciones_aux -> VOID FUNC ID . punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (46) punto_id_func -> .

    LEFT_PAR        reduce using rule 46 (punto_id_func -> .)

    punto_id_func                  shift and go to state 36

state 32

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL . punto_goto_main main_aux RIGHT_CURL punto_generator
    (9) punto_goto_main -> .

    ID              reduce using rule 9 (punto_goto_main -> .)
    READ            reduce using rule 9 (punto_goto_main -> .)
    WRITE           reduce using rule 9 (punto_goto_main -> .)
    IF              reduce using rule 9 (punto_goto_main -> .)
    WHILE           reduce using rule 9 (punto_goto_main -> .)
    FOR             reduce using rule 9 (punto_goto_main -> .)
    RIGHT_CURL      reduce using rule 9 (punto_goto_main -> .)

    punto_goto_main                shift and go to state 37

state 33

    (13) variables -> VAR punto_variables_1 variables_aux SEMICOLON .

    MAIN            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    VOID            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    INT             reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FLOAT           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    CHAR            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    RETURN          reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    ID              reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    READ            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WRITE           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    IF              reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WHILE           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FOR             reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)


state 34

    (15) variables_aux -> tipo COLON . declaracion_inicial
    (16) variables_aux -> tipo COLON . declaracion_inicial MORE variables_aux
    (20) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (23) dec_varaux -> . ID
    (24) dec_varaux -> . dec_var_dimension
    (25) dec_var_dimension -> . ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR
    (26) dec_var_dimension -> . ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR

    ID              shift and go to state 40

    declaracion_inicial            shift and go to state 38
    dec_varaux                     shift and go to state 39
    dec_var_dimension              shift and go to state 41

state 35

    (38) funciones_aux -> tipo FUNC ID punto_id_func . punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (40) punto_return_value -> .

    LEFT_PAR        reduce using rule 40 (punto_return_value -> .)

    punto_return_value             shift and go to state 42

state 36

    (39) funciones_aux -> VOID FUNC ID punto_id_func . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_PAR        shift and go to state 43


state 37

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main . main_aux RIGHT_CURL punto_generator
    (10) main_aux -> . estatutos_main_multiple
    (11) main_aux -> . empty
    (103) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (104) estatutos_main_multiple -> . estatutos_main
    (163) empty -> .
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 163 (empty -> .)
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    main_aux                       shift and go to state 44
    estatutos_main_multiple        shift and go to state 45
    empty                          shift and go to state 46
    estatutos_main                 shift and go to state 47
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 38

    (15) variables_aux -> tipo COLON declaracion_inicial .
    (16) variables_aux -> tipo COLON declaracion_inicial . MORE variables_aux

    SEMICOLON       reduce using rule 15 (variables_aux -> tipo COLON declaracion_inicial .)
    MORE            shift and go to state 63


state 39

    (20) declaracion_inicial -> dec_varaux . punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> dec_varaux . punto_dec_var_1
    (22) punto_dec_var_1 -> .

    COMMA           reduce using rule 22 (punto_dec_var_1 -> .)
    MORE            reduce using rule 22 (punto_dec_var_1 -> .)
    SEMICOLON       reduce using rule 22 (punto_dec_var_1 -> .)

    punto_dec_var_1                shift and go to state 64

state 40

    (23) dec_varaux -> ID .
    (25) dec_var_dimension -> ID . LEFT_BR punto_is_array m_exp punto_size RIGHT_BR
    (26) dec_var_dimension -> ID . LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR

    COMMA           reduce using rule 23 (dec_varaux -> ID .)
    MORE            reduce using rule 23 (dec_varaux -> ID .)
    SEMICOLON       reduce using rule 23 (dec_varaux -> ID .)
    LEFT_BR         shift and go to state 65


state 41

    (24) dec_varaux -> dec_var_dimension .

    COMMA           reduce using rule 24 (dec_varaux -> dec_var_dimension .)
    MORE            reduce using rule 24 (dec_varaux -> dec_var_dimension .)
    SEMICOLON       reduce using rule 24 (dec_varaux -> dec_var_dimension .)


state 42

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_PAR        shift and go to state 66


state 43

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (43) not_params -> . parametros count_params
    (44) not_params -> . empty
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (163) empty -> .
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 163 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    not_params                     shift and go to state 67
    parametros                     shift and go to state 68
    empty                          shift and go to state 69
    dec_var_param                  shift and go to state 70
    tipo                           shift and go to state 71

state 44

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux . RIGHT_CURL punto_generator

    RIGHT_CURL      shift and go to state 72


state 45

    (10) main_aux -> estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 10 (main_aux -> estatutos_main_multiple .)


state 46

    (11) main_aux -> empty .

    RIGHT_CURL      reduce using rule 11 (main_aux -> empty .)


state 47

    (103) estatutos_main_multiple -> estatutos_main . estatutos_main_multiple
    (104) estatutos_main_multiple -> estatutos_main .
    (103) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (104) estatutos_main_multiple -> . estatutos_main
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 104 (estatutos_main_multiple -> estatutos_main .)
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos_main                 shift and go to state 47
    estatutos_main_multiple        shift and go to state 73
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 48

    (97) estatutos_main -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 74


state 49

    (98) estatutos_main -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 75


state 50

    (99) estatutos_main -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 76


state 51

    (100) estatutos_main -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 77


state 52

    (101) estatutos_main -> decision . SEMICOLON

    SEMICOLON       shift and go to state 78


state 53

    (102) estatutos_main -> repeticion . SEMICOLON

    SEMICOLON       shift and go to state 79


state 54

    (107) asignacion -> vars . EQUALS punto_igual m_exp punto_asignacion

    EQUALS          shift and go to state 80


state 55

    (118) llamada -> ID . punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> ID . punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (108) vars -> ID . punto_asignacion_var
    (109) vars -> ID . punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (120) punto_verify_id -> .
    (115) punto_asignacion_var -> .

    LEFT_PAR        reduce using rule 120 (punto_verify_id -> .)
    LEFT_BR         reduce using rule 115 (punto_asignacion_var -> .)
    EQUALS          reduce using rule 115 (punto_asignacion_var -> .)

    punto_verify_id                shift and go to state 81
    punto_asignacion_var           shift and go to state 82

state 56

    (127) lectura -> READ . LEFT_PAR lectura_var RIGHT_PAR

    LEFT_PAR        shift and go to state 83


state 57

    (132) escritura -> WRITE . LEFT_PAR escritura_aux RIGHT_PAR

    LEFT_PAR        shift and go to state 84


state 58

    (140) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_PAR        shift and go to state 85


state 59

    (145) repeticion -> condicional .

    SEMICOLON       reduce using rule 145 (repeticion -> condicional .)


state 60

    (146) repeticion -> no_condicional .

    SEMICOLON       reduce using rule 146 (repeticion -> no_condicional .)


state 61

    (152) condicional -> WHILE . punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (153) punto_while -> .

    LEFT_PAR        reduce using rule 153 (punto_while -> .)

    punto_while                    shift and go to state 86

state 62

    (147) no_condicional -> FOR . LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_PAR        shift and go to state 87


state 63

    (16) variables_aux -> tipo COLON declaracion_inicial MORE . variables_aux
    (15) variables_aux -> . tipo COLON declaracion_inicial
    (16) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 29
    variables_aux                  shift and go to state 88

state 64

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 . COMMA declaracion_inicial
    (21) declaracion_inicial -> dec_varaux punto_dec_var_1 .

    COMMA           shift and go to state 89
    MORE            reduce using rule 21 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)
    SEMICOLON       reduce using rule 21 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)


state 65

    (25) dec_var_dimension -> ID LEFT_BR . punto_is_array m_exp punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR . punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR
    (27) punto_is_array -> .

    LEFT_PAR        reduce using rule 27 (punto_is_array -> .)
    ID              reduce using rule 27 (punto_is_array -> .)
    CTE_I           reduce using rule 27 (punto_is_array -> .)
    CTE_CHAR        reduce using rule 27 (punto_is_array -> .)

    punto_is_array                 shift and go to state 90

state 66

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (43) not_params -> . parametros count_params
    (44) not_params -> . empty
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (163) empty -> .
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 163 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 71
    not_params                     shift and go to state 91
    parametros                     shift and go to state 68
    empty                          shift and go to state 69
    dec_var_param                  shift and go to state 70

state 67

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    RIGHT_PAR       shift and go to state 92


state 68

    (43) not_params -> parametros . count_params
    (51) count_params -> .

    RIGHT_PAR       reduce using rule 51 (count_params -> .)

    count_params                   shift and go to state 93

state 69

    (44) not_params -> empty .

    RIGHT_PAR       reduce using rule 44 (not_params -> empty .)


state 70

    (47) parametros -> dec_var_param . COMMA parametros
    (48) parametros -> dec_var_param .

    COMMA           shift and go to state 94
    RIGHT_PAR       reduce using rule 48 (parametros -> dec_var_param .)


state 71

    (49) dec_var_param -> tipo . ID punto_push_param

    ID              shift and go to state 95


state 72

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL . punto_generator
    (8) punto_generator -> .

    $end            reduce using rule 8 (punto_generator -> .)

    punto_generator                shift and go to state 96

state 73

    (103) estatutos_main_multiple -> estatutos_main estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 103 (estatutos_main_multiple -> estatutos_main estatutos_main_multiple .)


state 74

    (97) estatutos_main -> asignacion SEMICOLON .

    ID              reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    READ            reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    WRITE           reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    IF              reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    WHILE           reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    FOR             reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    RIGHT_CURL      reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)
    RETURN          reduce using rule 97 (estatutos_main -> asignacion SEMICOLON .)


state 75

    (98) estatutos_main -> llamada SEMICOLON .

    ID              reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    READ            reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    WRITE           reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    IF              reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    WHILE           reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    FOR             reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    RIGHT_CURL      reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)
    RETURN          reduce using rule 98 (estatutos_main -> llamada SEMICOLON .)


state 76

    (99) estatutos_main -> lectura SEMICOLON .

    ID              reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    READ            reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    WRITE           reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    IF              reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    WHILE           reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    FOR             reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    RIGHT_CURL      reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)
    RETURN          reduce using rule 99 (estatutos_main -> lectura SEMICOLON .)


state 77

    (100) estatutos_main -> escritura SEMICOLON .

    ID              reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    READ            reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    WRITE           reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    IF              reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    WHILE           reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    FOR             reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    RIGHT_CURL      reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)
    RETURN          reduce using rule 100 (estatutos_main -> escritura SEMICOLON .)


state 78

    (101) estatutos_main -> decision SEMICOLON .

    ID              reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    READ            reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    WRITE           reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    IF              reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    WHILE           reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    FOR             reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    RIGHT_CURL      reduce using rule 101 (estatutos_main -> decision SEMICOLON .)
    RETURN          reduce using rule 101 (estatutos_main -> decision SEMICOLON .)


state 79

    (102) estatutos_main -> repeticion SEMICOLON .

    ID              reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    READ            reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    WRITE           reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    IF              reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    WHILE           reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    FOR             reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    RIGHT_CURL      reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)
    RETURN          reduce using rule 102 (estatutos_main -> repeticion SEMICOLON .)


state 80

    (107) asignacion -> vars EQUALS . punto_igual m_exp punto_asignacion
    (116) punto_igual -> .

    LEFT_PAR        reduce using rule 116 (punto_igual -> .)
    ID              reduce using rule 116 (punto_igual -> .)
    CTE_I           reduce using rule 116 (punto_igual -> .)
    CTE_CHAR        reduce using rule 116 (punto_igual -> .)

    punto_igual                    shift and go to state 97

state 81

    (118) llamada -> ID punto_verify_id . LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> ID punto_verify_id . LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada

    LEFT_PAR        shift and go to state 98


state 82

    (108) vars -> ID punto_asignacion_var .
    (109) vars -> ID punto_asignacion_var . punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (111) punto_get_size -> .

    EQUALS          reduce using rule 108 (vars -> ID punto_asignacion_var .)
    LEFT_BR         reduce using rule 111 (punto_get_size -> .)

    punto_get_size                 shift and go to state 99

state 83

    (127) lectura -> READ LEFT_PAR . lectura_var RIGHT_PAR
    (128) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (129) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand
    (126) punto_read_stack -> .

    ID              reduce using rule 126 (punto_read_stack -> .)

    lectura_var                    shift and go to state 100
    punto_read_stack               shift and go to state 101

state 84

    (132) escritura -> WRITE LEFT_PAR . escritura_aux RIGHT_PAR
    (133) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (134) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (135) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (136) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (138) punto_write_stack -> .

    STR             reduce using rule 138 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 138 (punto_write_stack -> .)
    ID              reduce using rule 138 (punto_write_stack -> .)
    CTE_I           reduce using rule 138 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 138 (punto_write_stack -> .)

    escritura_aux                  shift and go to state 102
    punto_write_stack              shift and go to state 103

state 85

    (140) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 105
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 86

    (152) condicional -> WHILE punto_while . LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_PAR        shift and go to state 116


state 87

    (147) no_condicional -> FOR LEFT_PAR . ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    ID              shift and go to state 117


state 88

    (16) variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .

    SEMICOLON       reduce using rule 16 (variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .)


state 89

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA . declaracion_inicial
    (20) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (23) dec_varaux -> . ID
    (24) dec_varaux -> . dec_var_dimension
    (25) dec_var_dimension -> . ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR
    (26) dec_var_dimension -> . ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR

    ID              shift and go to state 40

    dec_varaux                     shift and go to state 39
    declaracion_inicial            shift and go to state 118
    dec_var_dimension              shift and go to state 41

state 90

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array . m_exp punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array . m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 119
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 91

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    RIGHT_PAR       shift and go to state 120


state 92

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_CURL       shift and go to state 121


state 93

    (43) not_params -> parametros count_params .

    RIGHT_PAR       reduce using rule 43 (not_params -> parametros count_params .)


state 94

    (47) parametros -> dec_var_param COMMA . parametros
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    dec_var_param                  shift and go to state 70
    parametros                     shift and go to state 122
    tipo                           shift and go to state 71

state 95

    (49) dec_var_param -> tipo ID . punto_push_param
    (50) punto_push_param -> .

    COMMA           reduce using rule 50 (punto_push_param -> .)
    RIGHT_PAR       reduce using rule 50 (punto_push_param -> .)

    punto_push_param               shift and go to state 123

state 96

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator .

    $end            reduce using rule 7 (main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator .)


state 97

    (107) asignacion -> vars EQUALS punto_igual . m_exp punto_asignacion
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 124
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 98

    (118) llamada -> ID punto_verify_id LEFT_PAR . punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> ID punto_verify_id LEFT_PAR . punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) punto_era -> .

    RIGHT_PAR       reduce using rule 123 (punto_era -> .)
    LEFT_PAR        reduce using rule 123 (punto_era -> .)
    ID              reduce using rule 123 (punto_era -> .)
    CTE_I           reduce using rule 123 (punto_era -> .)
    CTE_CHAR        reduce using rule 123 (punto_era -> .)

    punto_era                      shift and go to state 125

state 99

    (109) vars -> ID punto_asignacion_var punto_get_size . LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr

    LEFT_BR         shift and go to state 126


state 100

    (127) lectura -> READ LEFT_PAR lectura_var . RIGHT_PAR

    RIGHT_PAR       shift and go to state 127


state 101

    (128) lectura_var -> punto_read_stack . ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (129) lectura_var -> punto_read_stack . ID punto_push_dec_var punto_add_read_operand

    ID              shift and go to state 128


state 102

    (132) escritura -> WRITE LEFT_PAR escritura_aux . RIGHT_PAR

    RIGHT_PAR       shift and go to state 129


state 103

    (133) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand
    (134) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand
    (135) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (136) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    STR             shift and go to state 130
    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 131
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 104

    (81) factor -> LEFT_PAR . punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (87) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 87 (punto_fondo_falso -> .)
    ID              reduce using rule 87 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 87 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 87 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 132

state 105

    (140) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_PAR       shift and go to state 133


state 106

    (54) exp_or -> t_exp . punto_pop_or t_exp_or_aux
    (55) exp_or -> t_exp . punto_pop_or
    (56) punto_pop_or -> .

    OR              reduce using rule 56 (punto_pop_or -> .)
    RIGHT_PAR       reduce using rule 56 (punto_pop_or -> .)

    punto_pop_or                   shift and go to state 134

state 107

    (59) t_exp -> g_exp . pop_and t_exp_aux
    (60) t_exp -> g_exp . pop_and
    (61) pop_and -> .

    AND             reduce using rule 61 (pop_and -> .)
    OR              reduce using rule 61 (pop_and -> .)
    RIGHT_PAR       reduce using rule 61 (pop_and -> .)

    pop_and                        shift and go to state 135

state 108

    (64) g_exp -> m_exp .
    (65) g_exp -> m_exp . relacionales punto_relacionales m_exp punto_pop_relacional
    (89) relacionales -> . LESS_THAN
    (90) relacionales -> . GREATER_THAN
    (91) relacionales -> . DIFFERENT
    (92) relacionales -> . EQUAL
    (93) relacionales -> . GREATER_EQUAL
    (94) relacionales -> . LESS_EQUAL

    AND             reduce using rule 64 (g_exp -> m_exp .)
    OR              reduce using rule 64 (g_exp -> m_exp .)
    RIGHT_PAR       reduce using rule 64 (g_exp -> m_exp .)
    LESS_THAN       shift and go to state 137
    GREATER_THAN    shift and go to state 138
    DIFFERENT       shift and go to state 139
    EQUAL           shift and go to state 140
    GREATER_EQUAL   shift and go to state 141
    LESS_EQUAL      shift and go to state 142

    relacionales                   shift and go to state 136

state 109

    (68) m_exp -> termino . punto_mexp_pop
    (69) m_exp -> termino . punto_mexp_pop m_exp_aux
    (70) punto_mexp_pop -> .

    PLUS            reduce using rule 70 (punto_mexp_pop -> .)
    MINUS           reduce using rule 70 (punto_mexp_pop -> .)
    LESS_THAN       reduce using rule 70 (punto_mexp_pop -> .)
    GREATER_THAN    reduce using rule 70 (punto_mexp_pop -> .)
    DIFFERENT       reduce using rule 70 (punto_mexp_pop -> .)
    EQUAL           reduce using rule 70 (punto_mexp_pop -> .)
    GREATER_EQUAL   reduce using rule 70 (punto_mexp_pop -> .)
    LESS_EQUAL      reduce using rule 70 (punto_mexp_pop -> .)
    AND             reduce using rule 70 (punto_mexp_pop -> .)
    OR              reduce using rule 70 (punto_mexp_pop -> .)
    RIGHT_PAR       reduce using rule 70 (punto_mexp_pop -> .)
    RIGHT_BR        reduce using rule 70 (punto_mexp_pop -> .)
    SEMICOLON       reduce using rule 70 (punto_mexp_pop -> .)
    COMMA           reduce using rule 70 (punto_mexp_pop -> .)
    TO              reduce using rule 70 (punto_mexp_pop -> .)

    punto_mexp_pop                 shift and go to state 143

state 110

    (74) termino -> factor . punto_termino_pop
    (75) termino -> factor . punto_termino_pop termino_aux
    (76) punto_termino_pop -> .

    MULTIPLY        reduce using rule 76 (punto_termino_pop -> .)
    DIVIDE          reduce using rule 76 (punto_termino_pop -> .)
    PLUS            reduce using rule 76 (punto_termino_pop -> .)
    MINUS           reduce using rule 76 (punto_termino_pop -> .)
    LESS_THAN       reduce using rule 76 (punto_termino_pop -> .)
    GREATER_THAN    reduce using rule 76 (punto_termino_pop -> .)
    DIFFERENT       reduce using rule 76 (punto_termino_pop -> .)
    EQUAL           reduce using rule 76 (punto_termino_pop -> .)
    GREATER_EQUAL   reduce using rule 76 (punto_termino_pop -> .)
    LESS_EQUAL      reduce using rule 76 (punto_termino_pop -> .)
    AND             reduce using rule 76 (punto_termino_pop -> .)
    OR              reduce using rule 76 (punto_termino_pop -> .)
    RIGHT_PAR       reduce using rule 76 (punto_termino_pop -> .)
    RIGHT_BR        reduce using rule 76 (punto_termino_pop -> .)
    SEMICOLON       reduce using rule 76 (punto_termino_pop -> .)
    COMMA           reduce using rule 76 (punto_termino_pop -> .)
    TO              reduce using rule 76 (punto_termino_pop -> .)

    punto_termino_pop              shift and go to state 144

state 111

    (80) factor -> cte .

    MULTIPLY        reduce using rule 80 (factor -> cte .)
    DIVIDE          reduce using rule 80 (factor -> cte .)
    PLUS            reduce using rule 80 (factor -> cte .)
    MINUS           reduce using rule 80 (factor -> cte .)
    LESS_THAN       reduce using rule 80 (factor -> cte .)
    GREATER_THAN    reduce using rule 80 (factor -> cte .)
    DIFFERENT       reduce using rule 80 (factor -> cte .)
    EQUAL           reduce using rule 80 (factor -> cte .)
    GREATER_EQUAL   reduce using rule 80 (factor -> cte .)
    LESS_EQUAL      reduce using rule 80 (factor -> cte .)
    AND             reduce using rule 80 (factor -> cte .)
    OR              reduce using rule 80 (factor -> cte .)
    RIGHT_PAR       reduce using rule 80 (factor -> cte .)
    RIGHT_BR        reduce using rule 80 (factor -> cte .)
    SEMICOLON       reduce using rule 80 (factor -> cte .)
    COMMA           reduce using rule 80 (factor -> cte .)
    TO              reduce using rule 80 (factor -> cte .)


state 112

    (82) factor -> ID . factor_push_operand
    (83) factor -> ID . punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> ID . punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> ID . punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (159) factor_push_operand -> .
    (120) punto_verify_id -> .
    (115) punto_asignacion_var -> .

    MULTIPLY        reduce using rule 159 (factor_push_operand -> .)
    DIVIDE          reduce using rule 159 (factor_push_operand -> .)
    PLUS            reduce using rule 159 (factor_push_operand -> .)
    MINUS           reduce using rule 159 (factor_push_operand -> .)
    LESS_THAN       reduce using rule 159 (factor_push_operand -> .)
    GREATER_THAN    reduce using rule 159 (factor_push_operand -> .)
    DIFFERENT       reduce using rule 159 (factor_push_operand -> .)
    EQUAL           reduce using rule 159 (factor_push_operand -> .)
    GREATER_EQUAL   reduce using rule 159 (factor_push_operand -> .)
    LESS_EQUAL      reduce using rule 159 (factor_push_operand -> .)
    AND             reduce using rule 159 (factor_push_operand -> .)
    OR              reduce using rule 159 (factor_push_operand -> .)
    RIGHT_PAR       reduce using rule 159 (factor_push_operand -> .)
    RIGHT_BR        reduce using rule 159 (factor_push_operand -> .)
    SEMICOLON       reduce using rule 159 (factor_push_operand -> .)
    COMMA           reduce using rule 159 (factor_push_operand -> .)
    TO              reduce using rule 159 (factor_push_operand -> .)
    LEFT_PAR        reduce using rule 120 (punto_verify_id -> .)
    LEFT_BR         reduce using rule 115 (punto_asignacion_var -> .)

    factor_push_operand            shift and go to state 145
    punto_verify_id                shift and go to state 146
    punto_asignacion_var           shift and go to state 147

state 113

    (156) cte -> CTE_I . factor_int_push
    (1) cte_f -> CTE_I . DOT CTE_I
    (161) factor_int_push -> .

    DOT             shift and go to state 149
    MULTIPLY        reduce using rule 161 (factor_int_push -> .)
    DIVIDE          reduce using rule 161 (factor_int_push -> .)
    PLUS            reduce using rule 161 (factor_int_push -> .)
    MINUS           reduce using rule 161 (factor_int_push -> .)
    LESS_THAN       reduce using rule 161 (factor_int_push -> .)
    GREATER_THAN    reduce using rule 161 (factor_int_push -> .)
    DIFFERENT       reduce using rule 161 (factor_int_push -> .)
    EQUAL           reduce using rule 161 (factor_int_push -> .)
    GREATER_EQUAL   reduce using rule 161 (factor_int_push -> .)
    LESS_EQUAL      reduce using rule 161 (factor_int_push -> .)
    AND             reduce using rule 161 (factor_int_push -> .)
    OR              reduce using rule 161 (factor_int_push -> .)
    RIGHT_PAR       reduce using rule 161 (factor_int_push -> .)
    RIGHT_BR        reduce using rule 161 (factor_int_push -> .)
    SEMICOLON       reduce using rule 161 (factor_int_push -> .)
    COMMA           reduce using rule 161 (factor_int_push -> .)
    TO              reduce using rule 161 (factor_int_push -> .)

    factor_int_push                shift and go to state 148

state 114

    (157) cte -> cte_f . factor_float_push
    (160) factor_float_push -> .

    MULTIPLY        reduce using rule 160 (factor_float_push -> .)
    DIVIDE          reduce using rule 160 (factor_float_push -> .)
    PLUS            reduce using rule 160 (factor_float_push -> .)
    MINUS           reduce using rule 160 (factor_float_push -> .)
    LESS_THAN       reduce using rule 160 (factor_float_push -> .)
    GREATER_THAN    reduce using rule 160 (factor_float_push -> .)
    DIFFERENT       reduce using rule 160 (factor_float_push -> .)
    EQUAL           reduce using rule 160 (factor_float_push -> .)
    GREATER_EQUAL   reduce using rule 160 (factor_float_push -> .)
    LESS_EQUAL      reduce using rule 160 (factor_float_push -> .)
    AND             reduce using rule 160 (factor_float_push -> .)
    OR              reduce using rule 160 (factor_float_push -> .)
    RIGHT_PAR       reduce using rule 160 (factor_float_push -> .)
    RIGHT_BR        reduce using rule 160 (factor_float_push -> .)
    SEMICOLON       reduce using rule 160 (factor_float_push -> .)
    COMMA           reduce using rule 160 (factor_float_push -> .)
    TO              reduce using rule 160 (factor_float_push -> .)

    factor_float_push              shift and go to state 150

state 115

    (158) cte -> CTE_CHAR . factor_char_push
    (162) factor_char_push -> .

    MULTIPLY        reduce using rule 162 (factor_char_push -> .)
    DIVIDE          reduce using rule 162 (factor_char_push -> .)
    PLUS            reduce using rule 162 (factor_char_push -> .)
    MINUS           reduce using rule 162 (factor_char_push -> .)
    LESS_THAN       reduce using rule 162 (factor_char_push -> .)
    GREATER_THAN    reduce using rule 162 (factor_char_push -> .)
    DIFFERENT       reduce using rule 162 (factor_char_push -> .)
    EQUAL           reduce using rule 162 (factor_char_push -> .)
    GREATER_EQUAL   reduce using rule 162 (factor_char_push -> .)
    LESS_EQUAL      reduce using rule 162 (factor_char_push -> .)
    AND             reduce using rule 162 (factor_char_push -> .)
    OR              reduce using rule 162 (factor_char_push -> .)
    RIGHT_PAR       reduce using rule 162 (factor_char_push -> .)
    RIGHT_BR        reduce using rule 162 (factor_char_push -> .)
    SEMICOLON       reduce using rule 162 (factor_char_push -> .)
    COMMA           reduce using rule 162 (factor_char_push -> .)
    TO              reduce using rule 162 (factor_char_push -> .)

    factor_char_push               shift and go to state 151

state 116

    (152) condicional -> WHILE punto_while LEFT_PAR . exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 152
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 117

    (147) no_condicional -> FOR LEFT_PAR ID . punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (148) punto_for -> .

    EQUALS          reduce using rule 148 (punto_for -> .)

    punto_for                      shift and go to state 153

state 118

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .

    MORE            reduce using rule 20 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)
    SEMICOLON       reduce using rule 20 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)


state 119

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp . punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp . punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR
    (28) punto_size -> .

    RIGHT_BR        reduce using rule 28 (punto_size -> .)

    punto_size                     shift and go to state 154

state 120

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_CURL       shift and go to state 155


state 121

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables count_vars estatutos RIGHT_CURL end_func
    (41) not_variables -> . variables count_vars
    (42) not_variables -> . empty
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)

    not_variables                  shift and go to state 156
    variables                      shift and go to state 157
    empty                          shift and go to state 158

state 122

    (47) parametros -> dec_var_param COMMA parametros .

    RIGHT_PAR       reduce using rule 47 (parametros -> dec_var_param COMMA parametros .)


state 123

    (49) dec_var_param -> tipo ID punto_push_param .

    COMMA           reduce using rule 49 (dec_var_param -> tipo ID punto_push_param .)
    RIGHT_PAR       reduce using rule 49 (dec_var_param -> tipo ID punto_push_param .)


state 124

    (107) asignacion -> vars EQUALS punto_igual m_exp . punto_asignacion
    (117) punto_asignacion -> .

    SEMICOLON       reduce using rule 117 (punto_asignacion -> .)

    punto_asignacion               shift and go to state 159

state 125

    (118) llamada -> ID punto_verify_id LEFT_PAR punto_era . RIGHT_PAR punto_end_llamada
    (119) llamada -> ID punto_verify_id LEFT_PAR punto_era . dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (32) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> . m_exp punto_verify_dec_param
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    RIGHT_PAR       shift and go to state 160
    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    dec_var_llamada                shift and go to state 161
    m_exp                          shift and go to state 162
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 126

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR . punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (87) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 87 (punto_fondo_falso -> .)
    ID              reduce using rule 87 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 87 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 87 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 163

state 127

    (127) lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .

    SEMICOLON       reduce using rule 127 (lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .)


state 128

    (128) lectura_var -> punto_read_stack ID . punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (129) lectura_var -> punto_read_stack ID . punto_push_dec_var punto_add_read_operand
    (130) punto_push_dec_var -> .

    COMMA           reduce using rule 130 (punto_push_dec_var -> .)
    RIGHT_PAR       reduce using rule 130 (punto_push_dec_var -> .)

    punto_push_dec_var             shift and go to state 164

state 129

    (132) escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .

    SEMICOLON       reduce using rule 132 (escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .)


state 130

    (133) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand
    (135) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (137) punto_escritura_push -> .

    COMMA           reduce using rule 137 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 137 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 165

state 131

    (134) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand
    (136) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (137) punto_escritura_push -> .

    COMMA           reduce using rule 137 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 137 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 166

state 132

    (81) factor -> LEFT_PAR punto_fondo_falso . exp_or RIGHT_PAR punto_fin_fondo_falso
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 167
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 133

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (142) punto_if_exp -> .

    LEFT_CURL       reduce using rule 142 (punto_if_exp -> .)

    punto_if_exp                   shift and go to state 168

state 134

    (54) exp_or -> t_exp punto_pop_or . t_exp_or_aux
    (55) exp_or -> t_exp punto_pop_or .
    (57) t_exp_or_aux -> . OR punto_push_or exp_or

    RIGHT_PAR       reduce using rule 55 (exp_or -> t_exp punto_pop_or .)
    OR              shift and go to state 170

    t_exp_or_aux                   shift and go to state 169

state 135

    (59) t_exp -> g_exp pop_and . t_exp_aux
    (60) t_exp -> g_exp pop_and .
    (62) t_exp_aux -> . AND punto_push_and t_exp

    OR              reduce using rule 60 (t_exp -> g_exp pop_and .)
    RIGHT_PAR       reduce using rule 60 (t_exp -> g_exp pop_and .)
    AND             shift and go to state 172

    t_exp_aux                      shift and go to state 171

state 136

    (65) g_exp -> m_exp relacionales . punto_relacionales m_exp punto_pop_relacional
    (66) punto_relacionales -> .

    LEFT_PAR        reduce using rule 66 (punto_relacionales -> .)
    ID              reduce using rule 66 (punto_relacionales -> .)
    CTE_I           reduce using rule 66 (punto_relacionales -> .)
    CTE_CHAR        reduce using rule 66 (punto_relacionales -> .)

    punto_relacionales             shift and go to state 173

state 137

    (89) relacionales -> LESS_THAN .

    LEFT_PAR        reduce using rule 89 (relacionales -> LESS_THAN .)
    ID              reduce using rule 89 (relacionales -> LESS_THAN .)
    CTE_I           reduce using rule 89 (relacionales -> LESS_THAN .)
    CTE_CHAR        reduce using rule 89 (relacionales -> LESS_THAN .)


state 138

    (90) relacionales -> GREATER_THAN .

    LEFT_PAR        reduce using rule 90 (relacionales -> GREATER_THAN .)
    ID              reduce using rule 90 (relacionales -> GREATER_THAN .)
    CTE_I           reduce using rule 90 (relacionales -> GREATER_THAN .)
    CTE_CHAR        reduce using rule 90 (relacionales -> GREATER_THAN .)


state 139

    (91) relacionales -> DIFFERENT .

    LEFT_PAR        reduce using rule 91 (relacionales -> DIFFERENT .)
    ID              reduce using rule 91 (relacionales -> DIFFERENT .)
    CTE_I           reduce using rule 91 (relacionales -> DIFFERENT .)
    CTE_CHAR        reduce using rule 91 (relacionales -> DIFFERENT .)


state 140

    (92) relacionales -> EQUAL .

    LEFT_PAR        reduce using rule 92 (relacionales -> EQUAL .)
    ID              reduce using rule 92 (relacionales -> EQUAL .)
    CTE_I           reduce using rule 92 (relacionales -> EQUAL .)
    CTE_CHAR        reduce using rule 92 (relacionales -> EQUAL .)


state 141

    (93) relacionales -> GREATER_EQUAL .

    LEFT_PAR        reduce using rule 93 (relacionales -> GREATER_EQUAL .)
    ID              reduce using rule 93 (relacionales -> GREATER_EQUAL .)
    CTE_I           reduce using rule 93 (relacionales -> GREATER_EQUAL .)
    CTE_CHAR        reduce using rule 93 (relacionales -> GREATER_EQUAL .)


state 142

    (94) relacionales -> LESS_EQUAL .

    LEFT_PAR        reduce using rule 94 (relacionales -> LESS_EQUAL .)
    ID              reduce using rule 94 (relacionales -> LESS_EQUAL .)
    CTE_I           reduce using rule 94 (relacionales -> LESS_EQUAL .)
    CTE_CHAR        reduce using rule 94 (relacionales -> LESS_EQUAL .)


state 143

    (68) m_exp -> termino punto_mexp_pop .
    (69) m_exp -> termino punto_mexp_pop . m_exp_aux
    (71) m_exp_aux -> . PLUS punto_m_exp_push m_exp
    (72) m_exp_aux -> . MINUS punto_m_exp_push m_exp

    LESS_THAN       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    GREATER_THAN    reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    DIFFERENT       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    EQUAL           reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    GREATER_EQUAL   reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    LESS_EQUAL      reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    AND             reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    OR              reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    RIGHT_PAR       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    RIGHT_BR        reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    SEMICOLON       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    COMMA           reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    TO              reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    PLUS            shift and go to state 175
    MINUS           shift and go to state 176

    m_exp_aux                      shift and go to state 174

state 144

    (74) termino -> factor punto_termino_pop .
    (75) termino -> factor punto_termino_pop . termino_aux
    (77) termino_aux -> . MULTIPLY punto_termino_aux termino
    (78) termino_aux -> . DIVIDE punto_termino_aux termino

    PLUS            reduce using rule 74 (termino -> factor punto_termino_pop .)
    MINUS           reduce using rule 74 (termino -> factor punto_termino_pop .)
    LESS_THAN       reduce using rule 74 (termino -> factor punto_termino_pop .)
    GREATER_THAN    reduce using rule 74 (termino -> factor punto_termino_pop .)
    DIFFERENT       reduce using rule 74 (termino -> factor punto_termino_pop .)
    EQUAL           reduce using rule 74 (termino -> factor punto_termino_pop .)
    GREATER_EQUAL   reduce using rule 74 (termino -> factor punto_termino_pop .)
    LESS_EQUAL      reduce using rule 74 (termino -> factor punto_termino_pop .)
    AND             reduce using rule 74 (termino -> factor punto_termino_pop .)
    OR              reduce using rule 74 (termino -> factor punto_termino_pop .)
    RIGHT_PAR       reduce using rule 74 (termino -> factor punto_termino_pop .)
    RIGHT_BR        reduce using rule 74 (termino -> factor punto_termino_pop .)
    SEMICOLON       reduce using rule 74 (termino -> factor punto_termino_pop .)
    COMMA           reduce using rule 74 (termino -> factor punto_termino_pop .)
    TO              reduce using rule 74 (termino -> factor punto_termino_pop .)
    MULTIPLY        shift and go to state 178
    DIVIDE          shift and go to state 179

    termino_aux                    shift and go to state 177

state 145

    (82) factor -> ID factor_push_operand .

    MULTIPLY        reduce using rule 82 (factor -> ID factor_push_operand .)
    DIVIDE          reduce using rule 82 (factor -> ID factor_push_operand .)
    PLUS            reduce using rule 82 (factor -> ID factor_push_operand .)
    MINUS           reduce using rule 82 (factor -> ID factor_push_operand .)
    LESS_THAN       reduce using rule 82 (factor -> ID factor_push_operand .)
    GREATER_THAN    reduce using rule 82 (factor -> ID factor_push_operand .)
    DIFFERENT       reduce using rule 82 (factor -> ID factor_push_operand .)
    EQUAL           reduce using rule 82 (factor -> ID factor_push_operand .)
    GREATER_EQUAL   reduce using rule 82 (factor -> ID factor_push_operand .)
    LESS_EQUAL      reduce using rule 82 (factor -> ID factor_push_operand .)
    AND             reduce using rule 82 (factor -> ID factor_push_operand .)
    OR              reduce using rule 82 (factor -> ID factor_push_operand .)
    RIGHT_PAR       reduce using rule 82 (factor -> ID factor_push_operand .)
    RIGHT_BR        reduce using rule 82 (factor -> ID factor_push_operand .)
    SEMICOLON       reduce using rule 82 (factor -> ID factor_push_operand .)
    COMMA           reduce using rule 82 (factor -> ID factor_push_operand .)
    TO              reduce using rule 82 (factor -> ID factor_push_operand .)


state 146

    (83) factor -> ID punto_verify_id . LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> ID punto_verify_id . LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada

    LEFT_PAR        shift and go to state 180


state 147

    (85) factor -> ID punto_asignacion_var . punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (111) punto_get_size -> .

    LEFT_BR         reduce using rule 111 (punto_get_size -> .)

    punto_get_size                 shift and go to state 181

state 148

    (156) cte -> CTE_I factor_int_push .

    MULTIPLY        reduce using rule 156 (cte -> CTE_I factor_int_push .)
    DIVIDE          reduce using rule 156 (cte -> CTE_I factor_int_push .)
    PLUS            reduce using rule 156 (cte -> CTE_I factor_int_push .)
    MINUS           reduce using rule 156 (cte -> CTE_I factor_int_push .)
    LESS_THAN       reduce using rule 156 (cte -> CTE_I factor_int_push .)
    GREATER_THAN    reduce using rule 156 (cte -> CTE_I factor_int_push .)
    DIFFERENT       reduce using rule 156 (cte -> CTE_I factor_int_push .)
    EQUAL           reduce using rule 156 (cte -> CTE_I factor_int_push .)
    GREATER_EQUAL   reduce using rule 156 (cte -> CTE_I factor_int_push .)
    LESS_EQUAL      reduce using rule 156 (cte -> CTE_I factor_int_push .)
    AND             reduce using rule 156 (cte -> CTE_I factor_int_push .)
    OR              reduce using rule 156 (cte -> CTE_I factor_int_push .)
    RIGHT_PAR       reduce using rule 156 (cte -> CTE_I factor_int_push .)
    RIGHT_BR        reduce using rule 156 (cte -> CTE_I factor_int_push .)
    SEMICOLON       reduce using rule 156 (cte -> CTE_I factor_int_push .)
    COMMA           reduce using rule 156 (cte -> CTE_I factor_int_push .)
    TO              reduce using rule 156 (cte -> CTE_I factor_int_push .)


state 149

    (1) cte_f -> CTE_I DOT . CTE_I

    CTE_I           shift and go to state 182


state 150

    (157) cte -> cte_f factor_float_push .

    MULTIPLY        reduce using rule 157 (cte -> cte_f factor_float_push .)
    DIVIDE          reduce using rule 157 (cte -> cte_f factor_float_push .)
    PLUS            reduce using rule 157 (cte -> cte_f factor_float_push .)
    MINUS           reduce using rule 157 (cte -> cte_f factor_float_push .)
    LESS_THAN       reduce using rule 157 (cte -> cte_f factor_float_push .)
    GREATER_THAN    reduce using rule 157 (cte -> cte_f factor_float_push .)
    DIFFERENT       reduce using rule 157 (cte -> cte_f factor_float_push .)
    EQUAL           reduce using rule 157 (cte -> cte_f factor_float_push .)
    GREATER_EQUAL   reduce using rule 157 (cte -> cte_f factor_float_push .)
    LESS_EQUAL      reduce using rule 157 (cte -> cte_f factor_float_push .)
    AND             reduce using rule 157 (cte -> cte_f factor_float_push .)
    OR              reduce using rule 157 (cte -> cte_f factor_float_push .)
    RIGHT_PAR       reduce using rule 157 (cte -> cte_f factor_float_push .)
    RIGHT_BR        reduce using rule 157 (cte -> cte_f factor_float_push .)
    SEMICOLON       reduce using rule 157 (cte -> cte_f factor_float_push .)
    COMMA           reduce using rule 157 (cte -> cte_f factor_float_push .)
    TO              reduce using rule 157 (cte -> cte_f factor_float_push .)


state 151

    (158) cte -> CTE_CHAR factor_char_push .

    MULTIPLY        reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    DIVIDE          reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    PLUS            reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    MINUS           reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    LESS_THAN       reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    GREATER_THAN    reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    DIFFERENT       reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    EQUAL           reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    GREATER_EQUAL   reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    LESS_EQUAL      reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    AND             reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    OR              reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    RIGHT_PAR       reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    RIGHT_BR        reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    SEMICOLON       reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    COMMA           reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)
    TO              reduce using rule 158 (cte -> CTE_CHAR factor_char_push .)


state 152

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or . RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    RIGHT_PAR       shift and go to state 183


state 153

    (147) no_condicional -> FOR LEFT_PAR ID punto_for . EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    EQUALS          shift and go to state 184


state 154

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size . RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size . RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR

    RIGHT_BR        shift and go to state 185


state 155

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables estatutos RIGHT_CURL punto_end_function_return
    (41) not_variables -> . variables count_vars
    (42) not_variables -> . empty
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)

    not_variables                  shift and go to state 186
    variables                      shift and go to state 157
    empty                          shift and go to state 158

state 156

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . count_vars estatutos RIGHT_CURL end_func
    (52) count_vars -> .

    RETURN          reduce using rule 52 (count_vars -> .)
    ID              reduce using rule 52 (count_vars -> .)
    READ            reduce using rule 52 (count_vars -> .)
    WRITE           reduce using rule 52 (count_vars -> .)
    IF              reduce using rule 52 (count_vars -> .)
    WHILE           reduce using rule 52 (count_vars -> .)
    FOR             reduce using rule 52 (count_vars -> .)

    count_vars                     shift and go to state 187

state 157

    (41) not_variables -> variables . count_vars
    (52) count_vars -> .

    RETURN          reduce using rule 52 (count_vars -> .)
    ID              reduce using rule 52 (count_vars -> .)
    READ            reduce using rule 52 (count_vars -> .)
    WRITE           reduce using rule 52 (count_vars -> .)
    IF              reduce using rule 52 (count_vars -> .)
    WHILE           reduce using rule 52 (count_vars -> .)
    FOR             reduce using rule 52 (count_vars -> .)

    count_vars                     shift and go to state 188

state 158

    (42) not_variables -> empty .

    RETURN          reduce using rule 42 (not_variables -> empty .)
    ID              reduce using rule 42 (not_variables -> empty .)
    READ            reduce using rule 42 (not_variables -> empty .)
    WRITE           reduce using rule 42 (not_variables -> empty .)
    IF              reduce using rule 42 (not_variables -> empty .)
    WHILE           reduce using rule 42 (not_variables -> empty .)
    FOR             reduce using rule 42 (not_variables -> empty .)


state 159

    (107) asignacion -> vars EQUALS punto_igual m_exp punto_asignacion .

    SEMICOLON       reduce using rule 107 (asignacion -> vars EQUALS punto_igual m_exp punto_asignacion .)


state 160

    (118) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR . punto_end_llamada
    (122) punto_end_llamada -> .

    SEMICOLON       reduce using rule 122 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 189

state 161

    (119) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada . RIGHT_PAR punto_verify_total_params punto_end_llamada

    RIGHT_PAR       shift and go to state 190


state 162

    (32) dec_var_llamada -> m_exp . punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> m_exp . punto_verify_dec_param
    (35) punto_verify_dec_param -> .

    COMMA           reduce using rule 35 (punto_verify_dec_param -> .)
    RIGHT_PAR       reduce using rule 35 (punto_verify_dec_param -> .)

    punto_verify_dec_param         shift and go to state 191

state 163

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso . m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 192
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 164

    (128) lectura_var -> punto_read_stack ID punto_push_dec_var . punto_add_read_operand COMMA lectura_var
    (129) lectura_var -> punto_read_stack ID punto_push_dec_var . punto_add_read_operand
    (131) punto_add_read_operand -> .

    COMMA           reduce using rule 131 (punto_add_read_operand -> .)
    RIGHT_PAR       reduce using rule 131 (punto_add_read_operand -> .)

    punto_add_read_operand         shift and go to state 193

state 165

    (133) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand
    (135) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (139) punto_add_write_operand -> .

    COMMA           reduce using rule 139 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 139 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 194

state 166

    (134) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand
    (136) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (139) punto_add_write_operand -> .

    COMMA           reduce using rule 139 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 139 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 195

state 167

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or . RIGHT_PAR punto_fin_fondo_falso

    RIGHT_PAR       shift and go to state 196


state 168

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 197


state 169

    (54) exp_or -> t_exp punto_pop_or t_exp_or_aux .

    RIGHT_PAR       reduce using rule 54 (exp_or -> t_exp punto_pop_or t_exp_or_aux .)


state 170

    (57) t_exp_or_aux -> OR . punto_push_or exp_or
    (58) punto_push_or -> .

    LEFT_PAR        reduce using rule 58 (punto_push_or -> .)
    ID              reduce using rule 58 (punto_push_or -> .)
    CTE_I           reduce using rule 58 (punto_push_or -> .)
    CTE_CHAR        reduce using rule 58 (punto_push_or -> .)

    punto_push_or                  shift and go to state 198

state 171

    (59) t_exp -> g_exp pop_and t_exp_aux .

    OR              reduce using rule 59 (t_exp -> g_exp pop_and t_exp_aux .)
    RIGHT_PAR       reduce using rule 59 (t_exp -> g_exp pop_and t_exp_aux .)


state 172

    (62) t_exp_aux -> AND . punto_push_and t_exp
    (63) punto_push_and -> .

    LEFT_PAR        reduce using rule 63 (punto_push_and -> .)
    ID              reduce using rule 63 (punto_push_and -> .)
    CTE_I           reduce using rule 63 (punto_push_and -> .)
    CTE_CHAR        reduce using rule 63 (punto_push_and -> .)

    punto_push_and                 shift and go to state 199

state 173

    (65) g_exp -> m_exp relacionales punto_relacionales . m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 200
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 174

    (69) m_exp -> termino punto_mexp_pop m_exp_aux .

    LESS_THAN       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_THAN    reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    DIFFERENT       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    EQUAL           reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_EQUAL   reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    LESS_EQUAL      reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    AND             reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    OR              reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    RIGHT_PAR       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    RIGHT_BR        reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    SEMICOLON       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    COMMA           reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    TO              reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)


state 175

    (71) m_exp_aux -> PLUS . punto_m_exp_push m_exp
    (73) punto_m_exp_push -> .

    LEFT_PAR        reduce using rule 73 (punto_m_exp_push -> .)
    ID              reduce using rule 73 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 73 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 73 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 201

state 176

    (72) m_exp_aux -> MINUS . punto_m_exp_push m_exp
    (73) punto_m_exp_push -> .

    LEFT_PAR        reduce using rule 73 (punto_m_exp_push -> .)
    ID              reduce using rule 73 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 73 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 73 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 202

state 177

    (75) termino -> factor punto_termino_pop termino_aux .

    PLUS            reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    MINUS           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    LESS_THAN       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_THAN    reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    DIFFERENT       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    EQUAL           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_EQUAL   reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    LESS_EQUAL      reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    AND             reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    OR              reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    RIGHT_PAR       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    RIGHT_BR        reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    SEMICOLON       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    COMMA           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    TO              reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)


state 178

    (77) termino_aux -> MULTIPLY . punto_termino_aux termino
    (79) punto_termino_aux -> .

    LEFT_PAR        reduce using rule 79 (punto_termino_aux -> .)
    ID              reduce using rule 79 (punto_termino_aux -> .)
    CTE_I           reduce using rule 79 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 79 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 203

state 179

    (78) termino_aux -> DIVIDE . punto_termino_aux termino
    (79) punto_termino_aux -> .

    LEFT_PAR        reduce using rule 79 (punto_termino_aux -> .)
    ID              reduce using rule 79 (punto_termino_aux -> .)
    CTE_I           reduce using rule 79 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 79 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 204

state 180

    (83) factor -> ID punto_verify_id LEFT_PAR . punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> ID punto_verify_id LEFT_PAR . punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (123) punto_era -> .

    RIGHT_PAR       reduce using rule 123 (punto_era -> .)
    LEFT_PAR        reduce using rule 123 (punto_era -> .)
    ID              reduce using rule 123 (punto_era -> .)
    CTE_I           reduce using rule 123 (punto_era -> .)
    CTE_CHAR        reduce using rule 123 (punto_era -> .)

    punto_era                      shift and go to state 205

state 181

    (85) factor -> ID punto_asignacion_var punto_get_size . LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr

    LEFT_BR         shift and go to state 206


state 182

    (1) cte_f -> CTE_I DOT CTE_I .

    MULTIPLY        reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIVIDE          reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    PLUS            reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    MINUS           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_THAN       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_THAN    reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIFFERENT       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    EQUAL           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_EQUAL   reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_EQUAL      reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    AND             reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    OR              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    RIGHT_PAR       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    RIGHT_BR        reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    SEMICOLON       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    COMMA           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    TO              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)


state 183

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR . punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (154) punto_validar_exp -> .

    LEFT_CURL       reduce using rule 154 (punto_validar_exp -> .)

    punto_validar_exp              shift and go to state 207

state 184

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS . m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 208
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 185

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR .
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR . LEFT_BR m_exp punto_size RIGHT_BR

    COMMA           reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR .)
    MORE            reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR .)
    SEMICOLON       reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR .)
    LEFT_BR         shift and go to state 209


state 186

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . estatutos RIGHT_CURL punto_end_function_return
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 210
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 187

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars . estatutos RIGHT_CURL end_func
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 215
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 188

    (41) not_variables -> variables count_vars .

    RETURN          reduce using rule 41 (not_variables -> variables count_vars .)
    ID              reduce using rule 41 (not_variables -> variables count_vars .)
    READ            reduce using rule 41 (not_variables -> variables count_vars .)
    WRITE           reduce using rule 41 (not_variables -> variables count_vars .)
    IF              reduce using rule 41 (not_variables -> variables count_vars .)
    WHILE           reduce using rule 41 (not_variables -> variables count_vars .)
    FOR             reduce using rule 41 (not_variables -> variables count_vars .)


state 189

    (118) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .

    SEMICOLON       reduce using rule 118 (llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)


state 190

    (119) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR . punto_verify_total_params punto_end_llamada
    (121) punto_verify_total_params -> .

    SEMICOLON       reduce using rule 121 (punto_verify_total_params -> .)

    punto_verify_total_params      shift and go to state 216

state 191

    (32) dec_var_llamada -> m_exp punto_verify_dec_param . COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> m_exp punto_verify_dec_param .

    COMMA           shift and go to state 217
    RIGHT_PAR       reduce using rule 33 (dec_var_llamada -> m_exp punto_verify_dec_param .)


state 192

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp . punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (112) punto_access_arr -> .

    RIGHT_BR        reduce using rule 112 (punto_access_arr -> .)

    punto_access_arr               shift and go to state 218

state 193

    (128) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand . COMMA lectura_var
    (129) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand .

    COMMA           shift and go to state 219
    RIGHT_PAR       reduce using rule 129 (lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand .)


state 194

    (133) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .
    (135) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 133 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 220


state 195

    (134) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .
    (136) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 134 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 221


state 196

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR . punto_fin_fondo_falso
    (88) punto_fin_fondo_falso -> .

    MULTIPLY        reduce using rule 88 (punto_fin_fondo_falso -> .)
    DIVIDE          reduce using rule 88 (punto_fin_fondo_falso -> .)
    PLUS            reduce using rule 88 (punto_fin_fondo_falso -> .)
    MINUS           reduce using rule 88 (punto_fin_fondo_falso -> .)
    LESS_THAN       reduce using rule 88 (punto_fin_fondo_falso -> .)
    GREATER_THAN    reduce using rule 88 (punto_fin_fondo_falso -> .)
    DIFFERENT       reduce using rule 88 (punto_fin_fondo_falso -> .)
    EQUAL           reduce using rule 88 (punto_fin_fondo_falso -> .)
    GREATER_EQUAL   reduce using rule 88 (punto_fin_fondo_falso -> .)
    LESS_EQUAL      reduce using rule 88 (punto_fin_fondo_falso -> .)
    AND             reduce using rule 88 (punto_fin_fondo_falso -> .)
    OR              reduce using rule 88 (punto_fin_fondo_falso -> .)
    RIGHT_PAR       reduce using rule 88 (punto_fin_fondo_falso -> .)
    RIGHT_BR        reduce using rule 88 (punto_fin_fondo_falso -> .)
    SEMICOLON       reduce using rule 88 (punto_fin_fondo_falso -> .)
    COMMA           reduce using rule 88 (punto_fin_fondo_falso -> .)
    TO              reduce using rule 88 (punto_fin_fondo_falso -> .)

    punto_fin_fondo_falso          shift and go to state 222

state 197

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL . estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 223
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 198

    (57) t_exp_or_aux -> OR punto_push_or . exp_or
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 224
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 199

    (62) t_exp_aux -> AND punto_push_and . t_exp
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    t_exp                          shift and go to state 225
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 200

    (65) g_exp -> m_exp relacionales punto_relacionales m_exp . punto_pop_relacional
    (67) punto_pop_relacional -> .

    AND             reduce using rule 67 (punto_pop_relacional -> .)
    OR              reduce using rule 67 (punto_pop_relacional -> .)
    RIGHT_PAR       reduce using rule 67 (punto_pop_relacional -> .)

    punto_pop_relacional           shift and go to state 226

state 201

    (71) m_exp_aux -> PLUS punto_m_exp_push . m_exp
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 227
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 202

    (72) m_exp_aux -> MINUS punto_m_exp_push . m_exp
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 228
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 203

    (77) termino_aux -> MULTIPLY punto_termino_aux . termino
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    termino                        shift and go to state 229
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 204

    (78) termino_aux -> DIVIDE punto_termino_aux . termino
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    termino                        shift and go to state 230
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 205

    (83) factor -> ID punto_verify_id LEFT_PAR punto_era . RIGHT_PAR punto_end_llamada
    (84) factor -> ID punto_verify_id LEFT_PAR punto_era . punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (87) punto_fondo_falso -> .

    RIGHT_PAR       shift and go to state 231
    LEFT_PAR        reduce using rule 87 (punto_fondo_falso -> .)
    ID              reduce using rule 87 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 87 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 87 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 232

state 206

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR . punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (87) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 87 (punto_fondo_falso -> .)
    ID              reduce using rule 87 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 87 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 87 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 233

state 207

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp . LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_CURL       shift and go to state 234


state 208

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp . punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (149) punto_exp_for_inf -> .

    TO              reduce using rule 149 (punto_exp_for_inf -> .)

    punto_exp_for_inf              shift and go to state 235

state 209

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR . m_exp punto_size RIGHT_BR
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 236
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 210

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos . RIGHT_CURL punto_end_function_return

    RIGHT_CURL      shift and go to state 237


state 211

    (95) estatutos -> estatutos_main_aux .

    RIGHT_CURL      reduce using rule 95 (estatutos -> estatutos_main_aux .)


state 212

    (96) estatutos -> retorno . SEMICOLON

    SEMICOLON       shift and go to state 238


state 213

    (105) estatutos_main_aux -> estatutos_main . estatutos
    (106) estatutos_main_aux -> estatutos_main .
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 106 (estatutos_main_aux -> estatutos_main .)
    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos_main                 shift and go to state 213
    estatutos                      shift and go to state 239
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 214

    (124) retorno -> RETURN . LEFT_PAR m_exp RIGHT_PAR punto_return

    LEFT_PAR        shift and go to state 240


state 215

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos . RIGHT_CURL end_func

    RIGHT_CURL      shift and go to state 241


state 216

    (119) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params . punto_end_llamada
    (122) punto_end_llamada -> .

    SEMICOLON       reduce using rule 122 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 242

state 217

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA . punto_mas_k dec_var_llamada
    (34) punto_mas_k -> .

    LEFT_PAR        reduce using rule 34 (punto_mas_k -> .)
    ID              reduce using rule 34 (punto_mas_k -> .)
    CTE_I           reduce using rule 34 (punto_mas_k -> .)
    CTE_CHAR        reduce using rule 34 (punto_mas_k -> .)

    punto_mas_k                    shift and go to state 243

state 218

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr . punto_verify_arr RIGHT_BR punto_direccion_arr
    (113) punto_verify_arr -> .

    RIGHT_BR        reduce using rule 113 (punto_verify_arr -> .)

    punto_verify_arr               shift and go to state 244

state 219

    (128) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA . lectura_var
    (128) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (129) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand
    (126) punto_read_stack -> .

    ID              reduce using rule 126 (punto_read_stack -> .)

    punto_read_stack               shift and go to state 101
    lectura_var                    shift and go to state 245

state 220

    (135) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (133) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (134) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (135) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (136) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (138) punto_write_stack -> .

    STR             reduce using rule 138 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 138 (punto_write_stack -> .)
    ID              reduce using rule 138 (punto_write_stack -> .)
    CTE_I           reduce using rule 138 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 138 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 103
    escritura_aux                  shift and go to state 246

state 221

    (136) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (133) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (134) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (135) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (136) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (138) punto_write_stack -> .

    STR             reduce using rule 138 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 138 (punto_write_stack -> .)
    ID              reduce using rule 138 (punto_write_stack -> .)
    CTE_I           reduce using rule 138 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 138 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 103
    escritura_aux                  shift and go to state 247

state 222

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .

    MULTIPLY        reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    DIVIDE          reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    PLUS            reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    MINUS           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    LESS_THAN       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    GREATER_THAN    reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    DIFFERENT       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    EQUAL           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    GREATER_EQUAL   reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    LESS_EQUAL      reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    AND             reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    OR              reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    RIGHT_PAR       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    RIGHT_BR        reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    SEMICOLON       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    COMMA           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    TO              reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)


state 223

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos . RIGHT_CURL punto_end_if
    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos . RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 248


state 224

    (57) t_exp_or_aux -> OR punto_push_or exp_or .

    RIGHT_PAR       reduce using rule 57 (t_exp_or_aux -> OR punto_push_or exp_or .)


state 225

    (62) t_exp_aux -> AND punto_push_and t_exp .

    OR              reduce using rule 62 (t_exp_aux -> AND punto_push_and t_exp .)
    RIGHT_PAR       reduce using rule 62 (t_exp_aux -> AND punto_push_and t_exp .)


state 226

    (65) g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .

    AND             reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    OR              reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    RIGHT_PAR       reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)


state 227

    (71) m_exp_aux -> PLUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    AND             reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    OR              reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    RIGHT_BR        reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    TO              reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)


state 228

    (72) m_exp_aux -> MINUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    AND             reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    OR              reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    RIGHT_BR        reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    TO              reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)


state 229

    (77) termino_aux -> MULTIPLY punto_termino_aux termino .

    PLUS            reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    MINUS           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_THAN       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    DIFFERENT       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    EQUAL           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    AND             reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    OR              reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    RIGHT_BR        reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    SEMICOLON       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    COMMA           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    TO              reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)


state 230

    (78) termino_aux -> DIVIDE punto_termino_aux termino .

    PLUS            reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    MINUS           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_THAN       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    DIFFERENT       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    EQUAL           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    AND             reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    OR              reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    RIGHT_BR        reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    SEMICOLON       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    COMMA           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    TO              reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)


state 231

    (83) factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR . punto_end_llamada
    (122) punto_end_llamada -> .

    MULTIPLY        reduce using rule 122 (punto_end_llamada -> .)
    DIVIDE          reduce using rule 122 (punto_end_llamada -> .)
    PLUS            reduce using rule 122 (punto_end_llamada -> .)
    MINUS           reduce using rule 122 (punto_end_llamada -> .)
    LESS_THAN       reduce using rule 122 (punto_end_llamada -> .)
    GREATER_THAN    reduce using rule 122 (punto_end_llamada -> .)
    DIFFERENT       reduce using rule 122 (punto_end_llamada -> .)
    EQUAL           reduce using rule 122 (punto_end_llamada -> .)
    GREATER_EQUAL   reduce using rule 122 (punto_end_llamada -> .)
    LESS_EQUAL      reduce using rule 122 (punto_end_llamada -> .)
    AND             reduce using rule 122 (punto_end_llamada -> .)
    OR              reduce using rule 122 (punto_end_llamada -> .)
    RIGHT_PAR       reduce using rule 122 (punto_end_llamada -> .)
    RIGHT_BR        reduce using rule 122 (punto_end_llamada -> .)
    SEMICOLON       reduce using rule 122 (punto_end_llamada -> .)
    COMMA           reduce using rule 122 (punto_end_llamada -> .)
    TO              reduce using rule 122 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 249

state 232

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso . dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (32) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> . m_exp punto_verify_dec_param
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    dec_var_llamada                shift and go to state 250
    m_exp                          shift and go to state 162
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 233

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso . m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 251
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 234

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL . estatutos RIGHT_CURL punto_end_while
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 252
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 235

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf . TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    TO              shift and go to state 253


state 236

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp . punto_size RIGHT_BR
    (28) punto_size -> .

    RIGHT_BR        reduce using rule 28 (punto_size -> .)

    punto_size                     shift and go to state 254

state 237

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL . punto_end_function_return
    (45) punto_end_function_return -> .

    VOID            reduce using rule 45 (punto_end_function_return -> .)
    INT             reduce using rule 45 (punto_end_function_return -> .)
    FLOAT           reduce using rule 45 (punto_end_function_return -> .)
    CHAR            reduce using rule 45 (punto_end_function_return -> .)
    MAIN            reduce using rule 45 (punto_end_function_return -> .)

    punto_end_function_return      shift and go to state 255

state 238

    (96) estatutos -> retorno SEMICOLON .

    RIGHT_CURL      reduce using rule 96 (estatutos -> retorno SEMICOLON .)


state 239

    (105) estatutos_main_aux -> estatutos_main estatutos .

    RIGHT_CURL      reduce using rule 105 (estatutos_main_aux -> estatutos_main estatutos .)


state 240

    (124) retorno -> RETURN LEFT_PAR . m_exp RIGHT_PAR punto_return
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 256
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 241

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL . end_func
    (53) end_func -> .

    VOID            reduce using rule 53 (end_func -> .)
    INT             reduce using rule 53 (end_func -> .)
    FLOAT           reduce using rule 53 (end_func -> .)
    CHAR            reduce using rule 53 (end_func -> .)
    MAIN            reduce using rule 53 (end_func -> .)

    end_func                       shift and go to state 257

state 242

    (119) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .

    SEMICOLON       reduce using rule 119 (llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .)


state 243

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k . dec_var_llamada
    (32) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> . m_exp punto_verify_dec_param
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 162
    dec_var_llamada                shift and go to state 258
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 244

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr . RIGHT_BR punto_direccion_arr

    RIGHT_BR        shift and go to state 259


state 245

    (128) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var .

    RIGHT_PAR       reduce using rule 128 (lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var .)


state 246

    (135) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 135 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 247

    (136) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 136 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 248

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL . ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (144) punto_end_if -> .

    ELSE            shift and go to state 261
    SEMICOLON       reduce using rule 144 (punto_end_if -> .)

    punto_end_if                   shift and go to state 260

state 249

    (83) factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .

    MULTIPLY        reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    DIVIDE          reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    PLUS            reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    MINUS           reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    LESS_THAN       reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    GREATER_THAN    reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    DIFFERENT       reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    EQUAL           reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    GREATER_EQUAL   reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    LESS_EQUAL      reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    AND             reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    OR              reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    RIGHT_PAR       reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    RIGHT_BR        reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    SEMICOLON       reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    COMMA           reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)
    TO              reduce using rule 83 (factor -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)


state 250

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada . RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada

    RIGHT_PAR       shift and go to state 262


state 251

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp . punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (112) punto_access_arr -> .

    RIGHT_BR        reduce using rule 112 (punto_access_arr -> .)

    punto_access_arr               shift and go to state 263

state 252

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos . RIGHT_CURL punto_end_while

    RIGHT_CURL      shift and go to state 264


state 253

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO . m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) factor -> . ID factor_push_operand
    (83) factor -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (84) factor -> . ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (85) factor -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (156) cte -> . CTE_I factor_int_push
    (157) cte -> . cte_f factor_float_push
    (158) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 265
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 254

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size . RIGHT_BR

    RIGHT_BR        shift and go to state 266


state 255

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .

    VOID            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    INT             reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    FLOAT           reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    CHAR            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    MAIN            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)


state 256

    (124) retorno -> RETURN LEFT_PAR m_exp . RIGHT_PAR punto_return

    RIGHT_PAR       shift and go to state 267


state 257

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .

    VOID            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    INT             reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    FLOAT           reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    CHAR            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    MAIN            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)


state 258

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .

    RIGHT_PAR       reduce using rule 32 (dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .)


state 259

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR . punto_direccion_arr
    (114) punto_direccion_arr -> .

    EQUALS          reduce using rule 114 (punto_direccion_arr -> .)

    punto_direccion_arr            shift and go to state 268

state 260

    (140) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 140 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 261

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE . punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (143) punto_else -> .

    LEFT_CURL       reduce using rule 143 (punto_else -> .)

    punto_else                     shift and go to state 269

state 262

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR . punto_saca_fondo_falso punto_verify_total_params punto_end_llamada
    (86) punto_saca_fondo_falso -> .

    MULTIPLY        reduce using rule 86 (punto_saca_fondo_falso -> .)
    DIVIDE          reduce using rule 86 (punto_saca_fondo_falso -> .)
    PLUS            reduce using rule 86 (punto_saca_fondo_falso -> .)
    MINUS           reduce using rule 86 (punto_saca_fondo_falso -> .)
    LESS_THAN       reduce using rule 86 (punto_saca_fondo_falso -> .)
    GREATER_THAN    reduce using rule 86 (punto_saca_fondo_falso -> .)
    DIFFERENT       reduce using rule 86 (punto_saca_fondo_falso -> .)
    EQUAL           reduce using rule 86 (punto_saca_fondo_falso -> .)
    GREATER_EQUAL   reduce using rule 86 (punto_saca_fondo_falso -> .)
    LESS_EQUAL      reduce using rule 86 (punto_saca_fondo_falso -> .)
    AND             reduce using rule 86 (punto_saca_fondo_falso -> .)
    OR              reduce using rule 86 (punto_saca_fondo_falso -> .)
    RIGHT_PAR       reduce using rule 86 (punto_saca_fondo_falso -> .)
    RIGHT_BR        reduce using rule 86 (punto_saca_fondo_falso -> .)
    SEMICOLON       reduce using rule 86 (punto_saca_fondo_falso -> .)
    COMMA           reduce using rule 86 (punto_saca_fondo_falso -> .)
    TO              reduce using rule 86 (punto_saca_fondo_falso -> .)

    punto_saca_fondo_falso         shift and go to state 270

state 263

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr . punto_verify_arr RIGHT_BR punto_direccion_arr
    (113) punto_verify_arr -> .

    RIGHT_BR        reduce using rule 113 (punto_verify_arr -> .)

    punto_verify_arr               shift and go to state 271

state 264

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL . punto_end_while
    (155) punto_end_while -> .

    SEMICOLON       reduce using rule 155 (punto_end_while -> .)

    punto_end_while                shift and go to state 272

state 265

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp . punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (150) punto_exp_for_sup -> .

    RIGHT_PAR       reduce using rule 150 (punto_exp_for_sup -> .)

    punto_exp_for_sup              shift and go to state 273

state 266

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR .

    COMMA           reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR .)
    MORE            reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR .)
    SEMICOLON       reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array m_exp punto_size RIGHT_BR LEFT_BR m_exp punto_size RIGHT_BR .)


state 267

    (124) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR . punto_return
    (125) punto_return -> .

    SEMICOLON       reduce using rule 125 (punto_return -> .)

    punto_return                   shift and go to state 274

state 268

    (109) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .

    EQUALS          reduce using rule 109 (vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)


state 269

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else . LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 275


state 270

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso . punto_verify_total_params punto_end_llamada
    (121) punto_verify_total_params -> .

    MULTIPLY        reduce using rule 121 (punto_verify_total_params -> .)
    DIVIDE          reduce using rule 121 (punto_verify_total_params -> .)
    PLUS            reduce using rule 121 (punto_verify_total_params -> .)
    MINUS           reduce using rule 121 (punto_verify_total_params -> .)
    LESS_THAN       reduce using rule 121 (punto_verify_total_params -> .)
    GREATER_THAN    reduce using rule 121 (punto_verify_total_params -> .)
    DIFFERENT       reduce using rule 121 (punto_verify_total_params -> .)
    EQUAL           reduce using rule 121 (punto_verify_total_params -> .)
    GREATER_EQUAL   reduce using rule 121 (punto_verify_total_params -> .)
    LESS_EQUAL      reduce using rule 121 (punto_verify_total_params -> .)
    AND             reduce using rule 121 (punto_verify_total_params -> .)
    OR              reduce using rule 121 (punto_verify_total_params -> .)
    RIGHT_PAR       reduce using rule 121 (punto_verify_total_params -> .)
    RIGHT_BR        reduce using rule 121 (punto_verify_total_params -> .)
    SEMICOLON       reduce using rule 121 (punto_verify_total_params -> .)
    COMMA           reduce using rule 121 (punto_verify_total_params -> .)
    TO              reduce using rule 121 (punto_verify_total_params -> .)

    punto_verify_total_params      shift and go to state 276

state 271

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr . RIGHT_BR punto_direccion_arr

    RIGHT_BR        shift and go to state 277


state 272

    (152) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .

    SEMICOLON       reduce using rule 152 (condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .)


state 273

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup . RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_PAR       shift and go to state 278


state 274

    (124) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .

    SEMICOLON       reduce using rule 124 (retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .)


state 275

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 279
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 276

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params . punto_end_llamada
    (122) punto_end_llamada -> .

    MULTIPLY        reduce using rule 122 (punto_end_llamada -> .)
    DIVIDE          reduce using rule 122 (punto_end_llamada -> .)
    PLUS            reduce using rule 122 (punto_end_llamada -> .)
    MINUS           reduce using rule 122 (punto_end_llamada -> .)
    LESS_THAN       reduce using rule 122 (punto_end_llamada -> .)
    GREATER_THAN    reduce using rule 122 (punto_end_llamada -> .)
    DIFFERENT       reduce using rule 122 (punto_end_llamada -> .)
    EQUAL           reduce using rule 122 (punto_end_llamada -> .)
    GREATER_EQUAL   reduce using rule 122 (punto_end_llamada -> .)
    LESS_EQUAL      reduce using rule 122 (punto_end_llamada -> .)
    AND             reduce using rule 122 (punto_end_llamada -> .)
    OR              reduce using rule 122 (punto_end_llamada -> .)
    RIGHT_PAR       reduce using rule 122 (punto_end_llamada -> .)
    RIGHT_BR        reduce using rule 122 (punto_end_llamada -> .)
    SEMICOLON       reduce using rule 122 (punto_end_llamada -> .)
    COMMA           reduce using rule 122 (punto_end_llamada -> .)
    TO              reduce using rule 122 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 280

state 277

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR . punto_direccion_arr
    (114) punto_direccion_arr -> .

    MULTIPLY        reduce using rule 114 (punto_direccion_arr -> .)
    DIVIDE          reduce using rule 114 (punto_direccion_arr -> .)
    PLUS            reduce using rule 114 (punto_direccion_arr -> .)
    MINUS           reduce using rule 114 (punto_direccion_arr -> .)
    LESS_THAN       reduce using rule 114 (punto_direccion_arr -> .)
    GREATER_THAN    reduce using rule 114 (punto_direccion_arr -> .)
    DIFFERENT       reduce using rule 114 (punto_direccion_arr -> .)
    EQUAL           reduce using rule 114 (punto_direccion_arr -> .)
    GREATER_EQUAL   reduce using rule 114 (punto_direccion_arr -> .)
    LESS_EQUAL      reduce using rule 114 (punto_direccion_arr -> .)
    AND             reduce using rule 114 (punto_direccion_arr -> .)
    OR              reduce using rule 114 (punto_direccion_arr -> .)
    RIGHT_PAR       reduce using rule 114 (punto_direccion_arr -> .)
    RIGHT_BR        reduce using rule 114 (punto_direccion_arr -> .)
    SEMICOLON       reduce using rule 114 (punto_direccion_arr -> .)
    COMMA           reduce using rule 114 (punto_direccion_arr -> .)
    TO              reduce using rule 114 (punto_direccion_arr -> .)

    punto_direccion_arr            shift and go to state 281

state 278

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR . LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_CURL       shift and go to state 282


state 279

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos . RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 283


state 280

    (84) factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .

    MULTIPLY        reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    DIVIDE          reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    PLUS            reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    MINUS           reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    LESS_THAN       reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    GREATER_THAN    reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    DIFFERENT       reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    EQUAL           reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    GREATER_EQUAL   reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    LESS_EQUAL      reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    AND             reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    OR              reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    RIGHT_PAR       reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    RIGHT_BR        reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    SEMICOLON       reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    COMMA           reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)
    TO              reduce using rule 84 (factor -> ID punto_verify_id LEFT_PAR punto_era punto_fondo_falso dec_var_llamada RIGHT_PAR punto_saca_fondo_falso punto_verify_total_params punto_end_llamada .)


state 281

    (85) factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .

    MULTIPLY        reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    DIVIDE          reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    PLUS            reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    MINUS           reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    LESS_THAN       reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    GREATER_THAN    reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    DIFFERENT       reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    EQUAL           reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    GREATER_EQUAL   reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    LESS_EQUAL      reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    AND             reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    OR              reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    RIGHT_PAR       reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    RIGHT_BR        reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    SEMICOLON       reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    COMMA           reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)
    TO              reduce using rule 85 (factor -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr .)


state 282

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL . estatutos RIGHT_CURL punto_end_for
    (95) estatutos -> . estatutos_main_aux
    (96) estatutos -> . retorno SEMICOLON
    (105) estatutos_main_aux -> . estatutos_main estatutos
    (106) estatutos_main_aux -> . estatutos_main
    (124) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (97) estatutos_main -> . asignacion SEMICOLON
    (98) estatutos_main -> . llamada SEMICOLON
    (99) estatutos_main -> . lectura SEMICOLON
    (100) estatutos_main -> . escritura SEMICOLON
    (101) estatutos_main -> . decision SEMICOLON
    (102) estatutos_main -> . repeticion SEMICOLON
    (107) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (118) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (119) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (127) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (132) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (140) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (145) repeticion -> . condicional
    (146) repeticion -> . no_condicional
    (108) vars -> . ID punto_asignacion_var
    (109) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr punto_verify_arr RIGHT_BR punto_direccion_arr
    (152) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (147) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 214
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 284
    estatutos_main_aux             shift and go to state 211
    retorno                        shift and go to state 212
    estatutos_main                 shift and go to state 213
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 283

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (144) punto_end_if -> .

    SEMICOLON       reduce using rule 144 (punto_end_if -> .)

    punto_end_if                   shift and go to state 285

state 284

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos . RIGHT_CURL punto_end_for

    RIGHT_CURL      shift and go to state 286


state 285

    (141) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 141 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 286

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL . punto_end_for
    (151) punto_end_for -> .

    SEMICOLON       reduce using rule 151 (punto_end_for -> .)

    punto_end_for                  shift and go to state 287

state 287

    (147) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .

    SEMICOLON       reduce using rule 147 (no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .)

