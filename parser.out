Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    DO
    THEN
    VD

Grammar

Rule 0     S' -> program
Rule 1     cte_f -> CTE_I DOT CTE_I
Rule 2     program -> PROGRAM ID punto_program COLON main
Rule 3     program -> PROGRAM ID punto_program COLON variables main
Rule 4     program -> PROGRAM ID punto_program COLON variables funciones main
Rule 5     program -> PROGRAM ID punto_program COLON funciones main
Rule 6     punto_program -> <empty>
Rule 7     main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
Rule 8     punto_generator -> <empty>
Rule 9     punto_goto_main -> <empty>
Rule 10    main_aux -> estatutos_main_multiple
Rule 11    main_aux -> empty
Rule 12    variables -> VAR punto_variables_1 SEMICOLON
Rule 13    variables -> VAR punto_variables_1 variables_aux SEMICOLON
Rule 14    punto_variables_1 -> <empty>
Rule 15    variables_aux -> tipo COLON declaracion_inicial
Rule 16    variables_aux -> tipo COLON declaracion_inicial MORE variables_aux
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> CHAR
Rule 20    declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial
Rule 21    declaracion_inicial -> dec_varaux punto_dec_var_1
Rule 22    punto_dec_var_1 -> <empty>
Rule 23    dec_varaux -> ID
Rule 24    dec_varaux -> dec_var_dimension
Rule 25    dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR
Rule 26    dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR
Rule 27    punto_is_array -> <empty>
Rule 28    punto_size -> <empty>
Rule 29    punto_dec_varaux_1 -> <empty>
Rule 30    dec_var -> ID COMMA dec_var
Rule 31    dec_var -> ID
Rule 32    dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
Rule 33    dec_var_llamada -> m_exp punto_verify_dec_param
Rule 34    punto_mas_k -> <empty>
Rule 35    punto_verify_dec_param -> <empty>
Rule 36    funciones -> funciones_aux
Rule 37    funciones -> funciones_aux funciones
Rule 38    funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
Rule 39    funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
Rule 40    punto_return_value -> <empty>
Rule 41    not_variables -> variables count_vars
Rule 42    not_variables -> empty
Rule 43    not_params -> parametros count_params
Rule 44    not_params -> empty
Rule 45    punto_end_function_return -> <empty>
Rule 46    punto_id_func -> <empty>
Rule 47    parametros -> dec_var_param COMMA parametros
Rule 48    parametros -> dec_var_param
Rule 49    dec_var_param -> tipo ID punto_push_param
Rule 50    punto_push_param -> <empty>
Rule 51    count_params -> <empty>
Rule 52    count_vars -> <empty>
Rule 53    end_func -> <empty>
Rule 54    exp_or -> t_exp punto_pop_or t_exp_or_aux
Rule 55    exp_or -> t_exp punto_pop_or
Rule 56    punto_pop_or -> <empty>
Rule 57    t_exp_or_aux -> OR punto_push_or exp_or
Rule 58    punto_push_or -> <empty>
Rule 59    t_exp -> g_exp pop_and t_exp_aux
Rule 60    t_exp -> g_exp pop_and
Rule 61    pop_and -> <empty>
Rule 62    t_exp_aux -> AND punto_push_and t_exp
Rule 63    punto_push_and -> <empty>
Rule 64    g_exp -> m_exp
Rule 65    g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional
Rule 66    punto_relacionales -> <empty>
Rule 67    punto_pop_relacional -> <empty>
Rule 68    m_exp -> termino punto_mexp_pop
Rule 69    m_exp -> termino punto_mexp_pop m_exp_aux
Rule 70    punto_mexp_pop -> <empty>
Rule 71    m_exp_aux -> PLUS punto_m_exp_push m_exp
Rule 72    m_exp_aux -> MINUS punto_m_exp_push m_exp
Rule 73    punto_m_exp_push -> <empty>
Rule 74    termino -> factor punto_termino_pop
Rule 75    termino -> factor punto_termino_pop termino_aux
Rule 76    punto_termino_pop -> <empty>
Rule 77    termino_aux -> MULTIPLY punto_termino_aux termino
Rule 78    termino_aux -> DIVIDE punto_termino_aux termino
Rule 79    punto_termino_aux -> <empty>
Rule 80    factor -> cte
Rule 81    factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
Rule 82    punto_fondo_falso -> <empty>
Rule 83    punto_fin_fondo_falso -> <empty>
Rule 84    relacionales -> LESS_THAN
Rule 85    relacionales -> GREATER_THAN
Rule 86    relacionales -> DIFFERENT
Rule 87    relacionales -> EQUAL
Rule 88    relacionales -> GREATER_EQUAL
Rule 89    relacionales -> LESS_EQUAL
Rule 90    estatutos -> estatutos_main_aux
Rule 91    estatutos -> retorno SEMICOLON
Rule 92    estatutos_main -> asignacion SEMICOLON
Rule 93    estatutos_main -> llamada SEMICOLON
Rule 94    estatutos_main -> lectura SEMICOLON
Rule 95    estatutos_main -> escritura SEMICOLON
Rule 96    estatutos_main -> decision SEMICOLON
Rule 97    estatutos_main -> repeticion SEMICOLON
Rule 98    estatutos_main_multiple -> estatutos_main estatutos_main_multiple
Rule 99    estatutos_main_multiple -> estatutos_main
Rule 100   estatutos_main_aux -> estatutos_main estatutos
Rule 101   estatutos_main_aux -> estatutos_main
Rule 102   asignacion -> vars EQUALS punto_igual m_exp punto_asignacion
Rule 103   vars -> ID punto_asignacion_var
Rule 104   vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
Rule 105   vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
Rule 106   punto_verify_matriz -> <empty>
Rule 107   punto_dimension_2 -> <empty>
Rule 108   punto_get_size -> <empty>
Rule 109   punto_access_arr -> <empty>
Rule 110   punto_verify_arr -> <empty>
Rule 111   punto_asignacion_var -> <empty>
Rule 112   punto_igual -> <empty>
Rule 113   punto_asignacion -> <empty>
Rule 114   llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
Rule 115   llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
Rule 116   punto_verify_id -> <empty>
Rule 117   punto_verify_total_params -> <empty>
Rule 118   punto_end_llamada -> <empty>
Rule 119   punto_era -> <empty>
Rule 120   retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
Rule 121   punto_return -> <empty>
Rule 122   punto_read_stack -> <empty>
Rule 123   lectura -> READ LEFT_PAR lectura_var RIGHT_PAR
Rule 124   lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
Rule 125   lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand
Rule 126   punto_push_dec_var -> <empty>
Rule 127   punto_add_read_operand -> <empty>
Rule 128   escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR
Rule 129   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand
Rule 130   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand
Rule 131   escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 132   escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
Rule 133   punto_escritura_push -> <empty>
Rule 134   punto_write_stack -> <empty>
Rule 135   punto_add_write_operand -> <empty>
Rule 136   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 137   decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
Rule 138   punto_if_exp -> <empty>
Rule 139   punto_else -> <empty>
Rule 140   punto_end_if -> <empty>
Rule 141   repeticion -> condicional
Rule 142   repeticion -> no_condicional
Rule 143   no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
Rule 144   punto_for -> <empty>
Rule 145   punto_exp_for_inf -> <empty>
Rule 146   punto_exp_for_sup -> <empty>
Rule 147   punto_end_for -> <empty>
Rule 148   condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
Rule 149   punto_while -> <empty>
Rule 150   punto_validar_exp -> <empty>
Rule 151   punto_end_while -> <empty>
Rule 152   cte -> ID factor_push_operand
Rule 153   cte -> CTE_I factor_int_push
Rule 154   cte -> cte_f factor_float_push
Rule 155   cte -> CTE_CHAR factor_char_push
Rule 156   factor_push_operand -> <empty>
Rule 157   factor_float_push -> <empty>
Rule 158   factor_int_push -> <empty>
Rule 159   factor_char_push -> <empty>
Rule 160   empty -> <empty>

Terminals, with rules where they appear

AND                  : 62
CHAR                 : 19
COLON                : 2 3 4 5 15 16
COMMA                : 20 30 32 47 124 131 132
CTE_CHAR             : 155
CTE_I                : 1 1 25 26 26 153
DIFFERENT            : 86
DIVIDE               : 78
DO                   : 
DOT                  : 1
ELSE                 : 137
EQUAL                : 87
EQUALS               : 102 143
FLOAT                : 18
FOR                  : 143
FUNC                 : 38 39
GREATER_EQUAL        : 88
GREATER_THAN         : 85
ID                   : 2 3 4 5 23 25 26 30 31 38 39 49 103 104 105 114 115 124 125 143 152
IF                   : 136 137
INT                  : 17
LEFT_BR              : 25 26 26 104 105 105
LEFT_CURL            : 7 38 39 136 137 137 143 148
LEFT_PAR             : 7 38 39 81 114 115 120 123 128 136 137 143 148
LESS_EQUAL           : 89
LESS_THAN            : 84
MAIN                 : 7
MINUS                : 72
MORE                 : 16
MULTIPLY             : 77
OR                   : 57
PLUS                 : 71
PROGRAM              : 2 3 4 5
READ                 : 123
RETURN               : 120
RIGHT_BR             : 25 26 26 104 105 105
RIGHT_CURL           : 7 38 39 136 137 137 143 148
RIGHT_PAR            : 7 38 39 81 114 115 120 123 128 136 137 143 148
SEMICOLON            : 12 13 91 92 93 94 95 96 97
STR                  : 129 131
THEN                 : 
TO                   : 143
VAR                  : 12 13
VD                   : 
VOID                 : 39
WHILE                : 148
WRITE                : 128
error                : 

Nonterminals, with rules where they appear

asignacion           : 92
condicional          : 141
count_params         : 43
count_vars           : 39 41
cte                  : 80
cte_f                : 154
dec_var              : 30
dec_var_dimension    : 24
dec_var_llamada      : 32 115
dec_var_param        : 47 48
dec_varaux           : 20 21
decision             : 96
declaracion_inicial  : 15 16 20
empty                : 11 42 44
end_func             : 39
escritura            : 95
escritura_aux        : 128 131 132
estatutos            : 38 39 100 136 137 137 143 148
estatutos_main       : 98 99 100 101
estatutos_main_aux   : 90
estatutos_main_multiple : 10 98
exp_or               : 57 81 136 137 148
factor               : 74 75
factor_char_push     : 155
factor_float_push    : 154
factor_int_push      : 153
factor_push_operand  : 152
funciones            : 4 5 37
funciones_aux        : 36 37
g_exp                : 59 60
lectura              : 94
lectura_var          : 123 124
llamada              : 93
m_exp                : 32 33 64 65 65 71 72 102 104 105 105 120 130 132 143 143
m_exp_aux            : 69
main                 : 2 3 4 5
main_aux             : 7
no_condicional       : 142
not_params           : 38 39
not_variables        : 38 39
parametros           : 43 47
pop_and              : 59 60
program              : 0
punto_access_arr     : 104 105 105
punto_add_read_operand : 124 125
punto_add_write_operand : 129 130 131 132
punto_asignacion     : 102
punto_asignacion_var : 103 104 105
punto_dec_var_1      : 20 21
punto_dec_varaux_1   : 
punto_dimension_2    : 105
punto_else           : 137
punto_end_for        : 143
punto_end_function_return : 38
punto_end_if         : 136 137
punto_end_llamada    : 114 115
punto_end_while      : 148
punto_era            : 114 115
punto_escritura_push : 129 130 131 132
punto_exp_for_inf    : 143
punto_exp_for_sup    : 143
punto_fin_fondo_falso : 81
punto_fondo_falso    : 81 104 105 105
punto_for            : 143
punto_generator      : 7
punto_get_size       : 104 105
punto_goto_main      : 7
punto_id_func        : 38 39
punto_if_exp         : 136 137
punto_igual          : 102
punto_is_array       : 25 26
punto_m_exp_push     : 71 72
punto_mas_k          : 32
punto_mexp_pop       : 68 69
punto_pop_or         : 54 55
punto_pop_relacional : 65
punto_program        : 2 3 4 5
punto_push_and       : 62
punto_push_dec_var   : 124 125
punto_push_or        : 57
punto_push_param     : 49
punto_read_stack     : 124 125
punto_relacionales   : 65
punto_return         : 120
punto_return_value   : 38
punto_size           : 25 26 26
punto_termino_aux    : 77 78
punto_termino_pop    : 74 75
punto_validar_exp    : 148
punto_variables_1    : 12 13
punto_verify_arr     : 104
punto_verify_dec_param : 32 33
punto_verify_id      : 114 115
punto_verify_matriz  : 105
punto_verify_total_params : 115
punto_while          : 148
punto_write_stack    : 129 130 131 132
relacionales         : 65
repeticion           : 97
retorno              : 91
t_exp                : 54 55 62
t_exp_aux            : 59
t_exp_or_aux         : 54
termino              : 68 69 77 78
termino_aux          : 75
tipo                 : 15 16 38 49
variables            : 3 4 41
variables_aux        : 13 16
vars                 : 102

Parsing method: LALR

state 0

    (0) S' -> . program
    (2) program -> . PROGRAM ID punto_program COLON main
    (3) program -> . PROGRAM ID punto_program COLON variables main
    (4) program -> . PROGRAM ID punto_program COLON variables funciones main
    (5) program -> . PROGRAM ID punto_program COLON funciones main

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (2) program -> PROGRAM . ID punto_program COLON main
    (3) program -> PROGRAM . ID punto_program COLON variables main
    (4) program -> PROGRAM . ID punto_program COLON variables funciones main
    (5) program -> PROGRAM . ID punto_program COLON funciones main

    ID              shift and go to state 3


state 3

    (2) program -> PROGRAM ID . punto_program COLON main
    (3) program -> PROGRAM ID . punto_program COLON variables main
    (4) program -> PROGRAM ID . punto_program COLON variables funciones main
    (5) program -> PROGRAM ID . punto_program COLON funciones main
    (6) punto_program -> .

    COLON           reduce using rule 6 (punto_program -> .)

    punto_program                  shift and go to state 4

state 4

    (2) program -> PROGRAM ID punto_program . COLON main
    (3) program -> PROGRAM ID punto_program . COLON variables main
    (4) program -> PROGRAM ID punto_program . COLON variables funciones main
    (5) program -> PROGRAM ID punto_program . COLON funciones main

    COLON           shift and go to state 5


state 5

    (2) program -> PROGRAM ID punto_program COLON . main
    (3) program -> PROGRAM ID punto_program COLON . variables main
    (4) program -> PROGRAM ID punto_program COLON . variables funciones main
    (5) program -> PROGRAM ID punto_program COLON . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            shift and go to state 9
    VAR             shift and go to state 10
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 6
    variables                      shift and go to state 7
    funciones                      shift and go to state 8
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 6

    (2) program -> PROGRAM ID punto_program COLON main .

    $end            reduce using rule 2 (program -> PROGRAM ID punto_program COLON main .)


state 7

    (3) program -> PROGRAM ID punto_program COLON variables . main
    (4) program -> PROGRAM ID punto_program COLON variables . funciones main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            shift and go to state 9
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    main                           shift and go to state 17
    funciones                      shift and go to state 18
    funciones_aux                  shift and go to state 11
    tipo                           shift and go to state 12

state 8

    (5) program -> PROGRAM ID punto_program COLON funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    MAIN            shift and go to state 9

    main                           shift and go to state 19

state 9

    (7) main -> MAIN . LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    LEFT_PAR        shift and go to state 20


state 10

    (12) variables -> VAR . punto_variables_1 SEMICOLON
    (13) variables -> VAR . punto_variables_1 variables_aux SEMICOLON
    (14) punto_variables_1 -> .

    SEMICOLON       reduce using rule 14 (punto_variables_1 -> .)
    INT             reduce using rule 14 (punto_variables_1 -> .)
    FLOAT           reduce using rule 14 (punto_variables_1 -> .)
    CHAR            reduce using rule 14 (punto_variables_1 -> .)

    punto_variables_1              shift and go to state 21

state 11

    (36) funciones -> funciones_aux .
    (37) funciones -> funciones_aux . funciones
    (36) funciones -> . funciones_aux
    (37) funciones -> . funciones_aux funciones
    (38) funciones_aux -> . tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (39) funciones_aux -> . VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    MAIN            reduce using rule 36 (funciones -> funciones_aux .)
    VOID            shift and go to state 13
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    funciones_aux                  shift and go to state 11
    funciones                      shift and go to state 22
    tipo                           shift and go to state 12

state 12

    (38) funciones_aux -> tipo . FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    FUNC            shift and go to state 23


state 13

    (39) funciones_aux -> VOID . FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    FUNC            shift and go to state 24


state 14

    (17) tipo -> INT .

    FUNC            reduce using rule 17 (tipo -> INT .)
    COLON           reduce using rule 17 (tipo -> INT .)
    ID              reduce using rule 17 (tipo -> INT .)


state 15

    (18) tipo -> FLOAT .

    FUNC            reduce using rule 18 (tipo -> FLOAT .)
    COLON           reduce using rule 18 (tipo -> FLOAT .)
    ID              reduce using rule 18 (tipo -> FLOAT .)


state 16

    (19) tipo -> CHAR .

    FUNC            reduce using rule 19 (tipo -> CHAR .)
    COLON           reduce using rule 19 (tipo -> CHAR .)
    ID              reduce using rule 19 (tipo -> CHAR .)


state 17

    (3) program -> PROGRAM ID punto_program COLON variables main .

    $end            reduce using rule 3 (program -> PROGRAM ID punto_program COLON variables main .)


state 18

    (4) program -> PROGRAM ID punto_program COLON variables funciones . main
    (7) main -> . MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    MAIN            shift and go to state 9

    main                           shift and go to state 25

state 19

    (5) program -> PROGRAM ID punto_program COLON funciones main .

    $end            reduce using rule 5 (program -> PROGRAM ID punto_program COLON funciones main .)


state 20

    (7) main -> MAIN LEFT_PAR . RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    RIGHT_PAR       shift and go to state 26


state 21

    (12) variables -> VAR punto_variables_1 . SEMICOLON
    (13) variables -> VAR punto_variables_1 . variables_aux SEMICOLON
    (15) variables_aux -> . tipo COLON declaracion_inicial
    (16) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    SEMICOLON       shift and go to state 27
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    variables_aux                  shift and go to state 28
    tipo                           shift and go to state 29

state 22

    (37) funciones -> funciones_aux funciones .

    MAIN            reduce using rule 37 (funciones -> funciones_aux funciones .)


state 23

    (38) funciones_aux -> tipo FUNC . ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    ID              shift and go to state 30


state 24

    (39) funciones_aux -> VOID FUNC . ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    ID              shift and go to state 31


state 25

    (4) program -> PROGRAM ID punto_program COLON variables funciones main .

    $end            reduce using rule 4 (program -> PROGRAM ID punto_program COLON variables funciones main .)


state 26

    (7) main -> MAIN LEFT_PAR RIGHT_PAR . LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator

    LEFT_CURL       shift and go to state 32


state 27

    (12) variables -> VAR punto_variables_1 SEMICOLON .

    MAIN            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    VOID            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    INT             reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    FLOAT           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    CHAR            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    RETURN          reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    ID              reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    READ            reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    WRITE           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    IF              reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    WHILE           reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)
    FOR             reduce using rule 12 (variables -> VAR punto_variables_1 SEMICOLON .)


state 28

    (13) variables -> VAR punto_variables_1 variables_aux . SEMICOLON

    SEMICOLON       shift and go to state 33


state 29

    (15) variables_aux -> tipo . COLON declaracion_inicial
    (16) variables_aux -> tipo . COLON declaracion_inicial MORE variables_aux

    COLON           shift and go to state 34


state 30

    (38) funciones_aux -> tipo FUNC ID . punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (46) punto_id_func -> .

    LEFT_PAR        reduce using rule 46 (punto_id_func -> .)

    punto_id_func                  shift and go to state 35

state 31

    (39) funciones_aux -> VOID FUNC ID . punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (46) punto_id_func -> .

    LEFT_PAR        reduce using rule 46 (punto_id_func -> .)

    punto_id_func                  shift and go to state 36

state 32

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL . punto_goto_main main_aux RIGHT_CURL punto_generator
    (9) punto_goto_main -> .

    ID              reduce using rule 9 (punto_goto_main -> .)
    READ            reduce using rule 9 (punto_goto_main -> .)
    WRITE           reduce using rule 9 (punto_goto_main -> .)
    IF              reduce using rule 9 (punto_goto_main -> .)
    WHILE           reduce using rule 9 (punto_goto_main -> .)
    FOR             reduce using rule 9 (punto_goto_main -> .)
    RIGHT_CURL      reduce using rule 9 (punto_goto_main -> .)

    punto_goto_main                shift and go to state 37

state 33

    (13) variables -> VAR punto_variables_1 variables_aux SEMICOLON .

    MAIN            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    VOID            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    INT             reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FLOAT           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    CHAR            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    RETURN          reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    ID              reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    READ            reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WRITE           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    IF              reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    WHILE           reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)
    FOR             reduce using rule 13 (variables -> VAR punto_variables_1 variables_aux SEMICOLON .)


state 34

    (15) variables_aux -> tipo COLON . declaracion_inicial
    (16) variables_aux -> tipo COLON . declaracion_inicial MORE variables_aux
    (20) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (23) dec_varaux -> . ID
    (24) dec_varaux -> . dec_var_dimension
    (25) dec_var_dimension -> . ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR
    (26) dec_var_dimension -> . ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR

    ID              shift and go to state 40

    declaracion_inicial            shift and go to state 38
    dec_varaux                     shift and go to state 39
    dec_var_dimension              shift and go to state 41

state 35

    (38) funciones_aux -> tipo FUNC ID punto_id_func . punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (40) punto_return_value -> .

    LEFT_PAR        reduce using rule 40 (punto_return_value -> .)

    punto_return_value             shift and go to state 42

state 36

    (39) funciones_aux -> VOID FUNC ID punto_id_func . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_PAR        shift and go to state 43


state 37

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main . main_aux RIGHT_CURL punto_generator
    (10) main_aux -> . estatutos_main_multiple
    (11) main_aux -> . empty
    (98) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (99) estatutos_main_multiple -> . estatutos_main
    (160) empty -> .
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 160 (empty -> .)
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    main_aux                       shift and go to state 44
    estatutos_main_multiple        shift and go to state 45
    empty                          shift and go to state 46
    estatutos_main                 shift and go to state 47
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 38

    (15) variables_aux -> tipo COLON declaracion_inicial .
    (16) variables_aux -> tipo COLON declaracion_inicial . MORE variables_aux

    SEMICOLON       reduce using rule 15 (variables_aux -> tipo COLON declaracion_inicial .)
    MORE            shift and go to state 63


state 39

    (20) declaracion_inicial -> dec_varaux . punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> dec_varaux . punto_dec_var_1
    (22) punto_dec_var_1 -> .

    COMMA           reduce using rule 22 (punto_dec_var_1 -> .)
    MORE            reduce using rule 22 (punto_dec_var_1 -> .)
    SEMICOLON       reduce using rule 22 (punto_dec_var_1 -> .)

    punto_dec_var_1                shift and go to state 64

state 40

    (23) dec_varaux -> ID .
    (25) dec_var_dimension -> ID . LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR
    (26) dec_var_dimension -> ID . LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR

    COMMA           reduce using rule 23 (dec_varaux -> ID .)
    MORE            reduce using rule 23 (dec_varaux -> ID .)
    SEMICOLON       reduce using rule 23 (dec_varaux -> ID .)
    LEFT_BR         shift and go to state 65


state 41

    (24) dec_varaux -> dec_var_dimension .

    COMMA           reduce using rule 24 (dec_varaux -> dec_var_dimension .)
    MORE            reduce using rule 24 (dec_varaux -> dec_var_dimension .)
    SEMICOLON       reduce using rule 24 (dec_varaux -> dec_var_dimension .)


state 42

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value . LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_PAR        shift and go to state 66


state 43

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func
    (43) not_params -> . parametros count_params
    (44) not_params -> . empty
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (160) empty -> .
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 160 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    not_params                     shift and go to state 67
    parametros                     shift and go to state 68
    empty                          shift and go to state 69
    dec_var_param                  shift and go to state 70
    tipo                           shift and go to state 71

state 44

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux . RIGHT_CURL punto_generator

    RIGHT_CURL      shift and go to state 72


state 45

    (10) main_aux -> estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 10 (main_aux -> estatutos_main_multiple .)


state 46

    (11) main_aux -> empty .

    RIGHT_CURL      reduce using rule 11 (main_aux -> empty .)


state 47

    (98) estatutos_main_multiple -> estatutos_main . estatutos_main_multiple
    (99) estatutos_main_multiple -> estatutos_main .
    (98) estatutos_main_multiple -> . estatutos_main estatutos_main_multiple
    (99) estatutos_main_multiple -> . estatutos_main
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 99 (estatutos_main_multiple -> estatutos_main .)
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos_main                 shift and go to state 47
    estatutos_main_multiple        shift and go to state 73
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 48

    (92) estatutos_main -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 74


state 49

    (93) estatutos_main -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 75


state 50

    (94) estatutos_main -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 76


state 51

    (95) estatutos_main -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 77


state 52

    (96) estatutos_main -> decision . SEMICOLON

    SEMICOLON       shift and go to state 78


state 53

    (97) estatutos_main -> repeticion . SEMICOLON

    SEMICOLON       shift and go to state 79


state 54

    (102) asignacion -> vars . EQUALS punto_igual m_exp punto_asignacion

    EQUALS          shift and go to state 80


state 55

    (114) llamada -> ID . punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> ID . punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (103) vars -> ID . punto_asignacion_var
    (104) vars -> ID . punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID . punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (116) punto_verify_id -> .
    (111) punto_asignacion_var -> .

    LEFT_PAR        reduce using rule 116 (punto_verify_id -> .)
    LEFT_BR         reduce using rule 111 (punto_asignacion_var -> .)
    EQUALS          reduce using rule 111 (punto_asignacion_var -> .)

    punto_verify_id                shift and go to state 81
    punto_asignacion_var           shift and go to state 82

state 56

    (123) lectura -> READ . LEFT_PAR lectura_var RIGHT_PAR

    LEFT_PAR        shift and go to state 83


state 57

    (128) escritura -> WRITE . LEFT_PAR escritura_aux RIGHT_PAR

    LEFT_PAR        shift and go to state 84


state 58

    (136) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF . LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_PAR        shift and go to state 85


state 59

    (141) repeticion -> condicional .

    SEMICOLON       reduce using rule 141 (repeticion -> condicional .)


state 60

    (142) repeticion -> no_condicional .

    SEMICOLON       reduce using rule 142 (repeticion -> no_condicional .)


state 61

    (148) condicional -> WHILE . punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (149) punto_while -> .

    LEFT_PAR        reduce using rule 149 (punto_while -> .)

    punto_while                    shift and go to state 86

state 62

    (143) no_condicional -> FOR . LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_PAR        shift and go to state 87


state 63

    (16) variables_aux -> tipo COLON declaracion_inicial MORE . variables_aux
    (15) variables_aux -> . tipo COLON declaracion_inicial
    (16) variables_aux -> . tipo COLON declaracion_inicial MORE variables_aux
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 29
    variables_aux                  shift and go to state 88

state 64

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 . COMMA declaracion_inicial
    (21) declaracion_inicial -> dec_varaux punto_dec_var_1 .

    COMMA           shift and go to state 89
    MORE            reduce using rule 21 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)
    SEMICOLON       reduce using rule 21 (declaracion_inicial -> dec_varaux punto_dec_var_1 .)


state 65

    (25) dec_var_dimension -> ID LEFT_BR . punto_is_array CTE_I punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR . punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR
    (27) punto_is_array -> .

    CTE_I           reduce using rule 27 (punto_is_array -> .)

    punto_is_array                 shift and go to state 90

state 66

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR . not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return
    (43) not_params -> . parametros count_params
    (44) not_params -> . empty
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (160) empty -> .
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    RIGHT_PAR       reduce using rule 160 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    tipo                           shift and go to state 71
    not_params                     shift and go to state 91
    parametros                     shift and go to state 68
    empty                          shift and go to state 69
    dec_var_param                  shift and go to state 70

state 67

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    RIGHT_PAR       shift and go to state 92


state 68

    (43) not_params -> parametros . count_params
    (51) count_params -> .

    RIGHT_PAR       reduce using rule 51 (count_params -> .)

    count_params                   shift and go to state 93

state 69

    (44) not_params -> empty .

    RIGHT_PAR       reduce using rule 44 (not_params -> empty .)


state 70

    (47) parametros -> dec_var_param . COMMA parametros
    (48) parametros -> dec_var_param .

    COMMA           shift and go to state 94
    RIGHT_PAR       reduce using rule 48 (parametros -> dec_var_param .)


state 71

    (49) dec_var_param -> tipo . ID punto_push_param

    ID              shift and go to state 95


state 72

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL . punto_generator
    (8) punto_generator -> .

    $end            reduce using rule 8 (punto_generator -> .)

    punto_generator                shift and go to state 96

state 73

    (98) estatutos_main_multiple -> estatutos_main estatutos_main_multiple .

    RIGHT_CURL      reduce using rule 98 (estatutos_main_multiple -> estatutos_main estatutos_main_multiple .)


state 74

    (92) estatutos_main -> asignacion SEMICOLON .

    ID              reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    READ            reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    WRITE           reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    IF              reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    WHILE           reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    FOR             reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    RIGHT_CURL      reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)
    RETURN          reduce using rule 92 (estatutos_main -> asignacion SEMICOLON .)


state 75

    (93) estatutos_main -> llamada SEMICOLON .

    ID              reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    READ            reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    WRITE           reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    IF              reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    WHILE           reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    FOR             reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    RIGHT_CURL      reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)
    RETURN          reduce using rule 93 (estatutos_main -> llamada SEMICOLON .)


state 76

    (94) estatutos_main -> lectura SEMICOLON .

    ID              reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    READ            reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    WRITE           reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    IF              reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    WHILE           reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    FOR             reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    RIGHT_CURL      reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)
    RETURN          reduce using rule 94 (estatutos_main -> lectura SEMICOLON .)


state 77

    (95) estatutos_main -> escritura SEMICOLON .

    ID              reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    READ            reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    WRITE           reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    IF              reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    WHILE           reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    FOR             reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    RIGHT_CURL      reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)
    RETURN          reduce using rule 95 (estatutos_main -> escritura SEMICOLON .)


state 78

    (96) estatutos_main -> decision SEMICOLON .

    ID              reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    READ            reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    WRITE           reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    IF              reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    WHILE           reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    FOR             reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    RIGHT_CURL      reduce using rule 96 (estatutos_main -> decision SEMICOLON .)
    RETURN          reduce using rule 96 (estatutos_main -> decision SEMICOLON .)


state 79

    (97) estatutos_main -> repeticion SEMICOLON .

    ID              reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    READ            reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    WRITE           reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    IF              reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    WHILE           reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    FOR             reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    RIGHT_CURL      reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)
    RETURN          reduce using rule 97 (estatutos_main -> repeticion SEMICOLON .)


state 80

    (102) asignacion -> vars EQUALS . punto_igual m_exp punto_asignacion
    (112) punto_igual -> .

    LEFT_PAR        reduce using rule 112 (punto_igual -> .)
    ID              reduce using rule 112 (punto_igual -> .)
    CTE_I           reduce using rule 112 (punto_igual -> .)
    CTE_CHAR        reduce using rule 112 (punto_igual -> .)

    punto_igual                    shift and go to state 97

state 81

    (114) llamada -> ID punto_verify_id . LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> ID punto_verify_id . LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada

    LEFT_PAR        shift and go to state 98


state 82

    (103) vars -> ID punto_asignacion_var .
    (104) vars -> ID punto_asignacion_var . punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var . punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (108) punto_get_size -> .

    EQUALS          reduce using rule 103 (vars -> ID punto_asignacion_var .)
    LEFT_BR         reduce using rule 108 (punto_get_size -> .)

    punto_get_size                 shift and go to state 99

state 83

    (123) lectura -> READ LEFT_PAR . lectura_var RIGHT_PAR
    (124) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (125) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand
    (122) punto_read_stack -> .

    ID              reduce using rule 122 (punto_read_stack -> .)

    lectura_var                    shift and go to state 100
    punto_read_stack               shift and go to state 101

state 84

    (128) escritura -> WRITE LEFT_PAR . escritura_aux RIGHT_PAR
    (129) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (130) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (131) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (132) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (134) punto_write_stack -> .

    STR             reduce using rule 134 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 134 (punto_write_stack -> .)
    ID              reduce using rule 134 (punto_write_stack -> .)
    CTE_I           reduce using rule 134 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 134 (punto_write_stack -> .)

    escritura_aux                  shift and go to state 102
    punto_write_stack              shift and go to state 103

state 85

    (136) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR . exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 105
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 86

    (148) condicional -> WHILE punto_while . LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_PAR        shift and go to state 116


state 87

    (143) no_condicional -> FOR LEFT_PAR . ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    ID              shift and go to state 117


state 88

    (16) variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .

    SEMICOLON       reduce using rule 16 (variables_aux -> tipo COLON declaracion_inicial MORE variables_aux .)


state 89

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA . declaracion_inicial
    (20) declaracion_inicial -> . dec_varaux punto_dec_var_1 COMMA declaracion_inicial
    (21) declaracion_inicial -> . dec_varaux punto_dec_var_1
    (23) dec_varaux -> . ID
    (24) dec_varaux -> . dec_var_dimension
    (25) dec_var_dimension -> . ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR
    (26) dec_var_dimension -> . ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR

    ID              shift and go to state 40

    dec_varaux                     shift and go to state 39
    declaracion_inicial            shift and go to state 118
    dec_var_dimension              shift and go to state 41

state 90

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array . CTE_I punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array . CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR

    CTE_I           shift and go to state 119


state 91

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params . RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    RIGHT_PAR       shift and go to state 120


state 92

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func

    LEFT_CURL       shift and go to state 121


state 93

    (43) not_params -> parametros count_params .

    RIGHT_PAR       reduce using rule 43 (not_params -> parametros count_params .)


state 94

    (47) parametros -> dec_var_param COMMA . parametros
    (47) parametros -> . dec_var_param COMMA parametros
    (48) parametros -> . dec_var_param
    (49) dec_var_param -> . tipo ID punto_push_param
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    dec_var_param                  shift and go to state 70
    parametros                     shift and go to state 122
    tipo                           shift and go to state 71

state 95

    (49) dec_var_param -> tipo ID . punto_push_param
    (50) punto_push_param -> .

    COMMA           reduce using rule 50 (punto_push_param -> .)
    RIGHT_PAR       reduce using rule 50 (punto_push_param -> .)

    punto_push_param               shift and go to state 123

state 96

    (7) main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator .

    $end            reduce using rule 7 (main -> MAIN LEFT_PAR RIGHT_PAR LEFT_CURL punto_goto_main main_aux RIGHT_CURL punto_generator .)


state 97

    (102) asignacion -> vars EQUALS punto_igual . m_exp punto_asignacion
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 124
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 98

    (114) llamada -> ID punto_verify_id LEFT_PAR . punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> ID punto_verify_id LEFT_PAR . punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (119) punto_era -> .

    RIGHT_PAR       reduce using rule 119 (punto_era -> .)
    LEFT_PAR        reduce using rule 119 (punto_era -> .)
    ID              reduce using rule 119 (punto_era -> .)
    CTE_I           reduce using rule 119 (punto_era -> .)
    CTE_CHAR        reduce using rule 119 (punto_era -> .)

    punto_era                      shift and go to state 125

state 99

    (104) vars -> ID punto_asignacion_var punto_get_size . LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size . LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz

    LEFT_BR         shift and go to state 126


state 100

    (123) lectura -> READ LEFT_PAR lectura_var . RIGHT_PAR

    RIGHT_PAR       shift and go to state 127


state 101

    (124) lectura_var -> punto_read_stack . ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (125) lectura_var -> punto_read_stack . ID punto_push_dec_var punto_add_read_operand

    ID              shift and go to state 128


state 102

    (128) escritura -> WRITE LEFT_PAR escritura_aux . RIGHT_PAR

    RIGHT_PAR       shift and go to state 129


state 103

    (129) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand
    (130) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand
    (131) escritura_aux -> punto_write_stack . STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (132) escritura_aux -> punto_write_stack . m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    STR             shift and go to state 130
    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 131
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 104

    (81) factor -> LEFT_PAR . punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (82) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 82 (punto_fondo_falso -> .)
    ID              reduce using rule 82 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 82 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 82 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 132

state 105

    (136) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR exp_or . RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_PAR       shift and go to state 133


state 106

    (54) exp_or -> t_exp . punto_pop_or t_exp_or_aux
    (55) exp_or -> t_exp . punto_pop_or
    (56) punto_pop_or -> .

    OR              reduce using rule 56 (punto_pop_or -> .)
    RIGHT_PAR       reduce using rule 56 (punto_pop_or -> .)

    punto_pop_or                   shift and go to state 134

state 107

    (59) t_exp -> g_exp . pop_and t_exp_aux
    (60) t_exp -> g_exp . pop_and
    (61) pop_and -> .

    AND             reduce using rule 61 (pop_and -> .)
    OR              reduce using rule 61 (pop_and -> .)
    RIGHT_PAR       reduce using rule 61 (pop_and -> .)

    pop_and                        shift and go to state 135

state 108

    (64) g_exp -> m_exp .
    (65) g_exp -> m_exp . relacionales punto_relacionales m_exp punto_pop_relacional
    (84) relacionales -> . LESS_THAN
    (85) relacionales -> . GREATER_THAN
    (86) relacionales -> . DIFFERENT
    (87) relacionales -> . EQUAL
    (88) relacionales -> . GREATER_EQUAL
    (89) relacionales -> . LESS_EQUAL

    AND             reduce using rule 64 (g_exp -> m_exp .)
    OR              reduce using rule 64 (g_exp -> m_exp .)
    RIGHT_PAR       reduce using rule 64 (g_exp -> m_exp .)
    LESS_THAN       shift and go to state 137
    GREATER_THAN    shift and go to state 138
    DIFFERENT       shift and go to state 139
    EQUAL           shift and go to state 140
    GREATER_EQUAL   shift and go to state 141
    LESS_EQUAL      shift and go to state 142

    relacionales                   shift and go to state 136

state 109

    (68) m_exp -> termino . punto_mexp_pop
    (69) m_exp -> termino . punto_mexp_pop m_exp_aux
    (70) punto_mexp_pop -> .

    PLUS            reduce using rule 70 (punto_mexp_pop -> .)
    MINUS           reduce using rule 70 (punto_mexp_pop -> .)
    LESS_THAN       reduce using rule 70 (punto_mexp_pop -> .)
    GREATER_THAN    reduce using rule 70 (punto_mexp_pop -> .)
    DIFFERENT       reduce using rule 70 (punto_mexp_pop -> .)
    EQUAL           reduce using rule 70 (punto_mexp_pop -> .)
    GREATER_EQUAL   reduce using rule 70 (punto_mexp_pop -> .)
    LESS_EQUAL      reduce using rule 70 (punto_mexp_pop -> .)
    AND             reduce using rule 70 (punto_mexp_pop -> .)
    OR              reduce using rule 70 (punto_mexp_pop -> .)
    RIGHT_PAR       reduce using rule 70 (punto_mexp_pop -> .)
    SEMICOLON       reduce using rule 70 (punto_mexp_pop -> .)
    COMMA           reduce using rule 70 (punto_mexp_pop -> .)
    RIGHT_BR        reduce using rule 70 (punto_mexp_pop -> .)
    TO              reduce using rule 70 (punto_mexp_pop -> .)

    punto_mexp_pop                 shift and go to state 143

state 110

    (74) termino -> factor . punto_termino_pop
    (75) termino -> factor . punto_termino_pop termino_aux
    (76) punto_termino_pop -> .

    MULTIPLY        reduce using rule 76 (punto_termino_pop -> .)
    DIVIDE          reduce using rule 76 (punto_termino_pop -> .)
    PLUS            reduce using rule 76 (punto_termino_pop -> .)
    MINUS           reduce using rule 76 (punto_termino_pop -> .)
    LESS_THAN       reduce using rule 76 (punto_termino_pop -> .)
    GREATER_THAN    reduce using rule 76 (punto_termino_pop -> .)
    DIFFERENT       reduce using rule 76 (punto_termino_pop -> .)
    EQUAL           reduce using rule 76 (punto_termino_pop -> .)
    GREATER_EQUAL   reduce using rule 76 (punto_termino_pop -> .)
    LESS_EQUAL      reduce using rule 76 (punto_termino_pop -> .)
    AND             reduce using rule 76 (punto_termino_pop -> .)
    OR              reduce using rule 76 (punto_termino_pop -> .)
    RIGHT_PAR       reduce using rule 76 (punto_termino_pop -> .)
    SEMICOLON       reduce using rule 76 (punto_termino_pop -> .)
    COMMA           reduce using rule 76 (punto_termino_pop -> .)
    RIGHT_BR        reduce using rule 76 (punto_termino_pop -> .)
    TO              reduce using rule 76 (punto_termino_pop -> .)

    punto_termino_pop              shift and go to state 144

state 111

    (80) factor -> cte .

    MULTIPLY        reduce using rule 80 (factor -> cte .)
    DIVIDE          reduce using rule 80 (factor -> cte .)
    PLUS            reduce using rule 80 (factor -> cte .)
    MINUS           reduce using rule 80 (factor -> cte .)
    LESS_THAN       reduce using rule 80 (factor -> cte .)
    GREATER_THAN    reduce using rule 80 (factor -> cte .)
    DIFFERENT       reduce using rule 80 (factor -> cte .)
    EQUAL           reduce using rule 80 (factor -> cte .)
    GREATER_EQUAL   reduce using rule 80 (factor -> cte .)
    LESS_EQUAL      reduce using rule 80 (factor -> cte .)
    AND             reduce using rule 80 (factor -> cte .)
    OR              reduce using rule 80 (factor -> cte .)
    RIGHT_PAR       reduce using rule 80 (factor -> cte .)
    SEMICOLON       reduce using rule 80 (factor -> cte .)
    COMMA           reduce using rule 80 (factor -> cte .)
    RIGHT_BR        reduce using rule 80 (factor -> cte .)
    TO              reduce using rule 80 (factor -> cte .)


state 112

    (152) cte -> ID . factor_push_operand
    (156) factor_push_operand -> .

    MULTIPLY        reduce using rule 156 (factor_push_operand -> .)
    DIVIDE          reduce using rule 156 (factor_push_operand -> .)
    PLUS            reduce using rule 156 (factor_push_operand -> .)
    MINUS           reduce using rule 156 (factor_push_operand -> .)
    LESS_THAN       reduce using rule 156 (factor_push_operand -> .)
    GREATER_THAN    reduce using rule 156 (factor_push_operand -> .)
    DIFFERENT       reduce using rule 156 (factor_push_operand -> .)
    EQUAL           reduce using rule 156 (factor_push_operand -> .)
    GREATER_EQUAL   reduce using rule 156 (factor_push_operand -> .)
    LESS_EQUAL      reduce using rule 156 (factor_push_operand -> .)
    AND             reduce using rule 156 (factor_push_operand -> .)
    OR              reduce using rule 156 (factor_push_operand -> .)
    RIGHT_PAR       reduce using rule 156 (factor_push_operand -> .)
    SEMICOLON       reduce using rule 156 (factor_push_operand -> .)
    COMMA           reduce using rule 156 (factor_push_operand -> .)
    RIGHT_BR        reduce using rule 156 (factor_push_operand -> .)
    TO              reduce using rule 156 (factor_push_operand -> .)

    factor_push_operand            shift and go to state 145

state 113

    (153) cte -> CTE_I . factor_int_push
    (1) cte_f -> CTE_I . DOT CTE_I
    (158) factor_int_push -> .

    DOT             shift and go to state 147
    MULTIPLY        reduce using rule 158 (factor_int_push -> .)
    DIVIDE          reduce using rule 158 (factor_int_push -> .)
    PLUS            reduce using rule 158 (factor_int_push -> .)
    MINUS           reduce using rule 158 (factor_int_push -> .)
    LESS_THAN       reduce using rule 158 (factor_int_push -> .)
    GREATER_THAN    reduce using rule 158 (factor_int_push -> .)
    DIFFERENT       reduce using rule 158 (factor_int_push -> .)
    EQUAL           reduce using rule 158 (factor_int_push -> .)
    GREATER_EQUAL   reduce using rule 158 (factor_int_push -> .)
    LESS_EQUAL      reduce using rule 158 (factor_int_push -> .)
    AND             reduce using rule 158 (factor_int_push -> .)
    OR              reduce using rule 158 (factor_int_push -> .)
    RIGHT_PAR       reduce using rule 158 (factor_int_push -> .)
    SEMICOLON       reduce using rule 158 (factor_int_push -> .)
    COMMA           reduce using rule 158 (factor_int_push -> .)
    RIGHT_BR        reduce using rule 158 (factor_int_push -> .)
    TO              reduce using rule 158 (factor_int_push -> .)

    factor_int_push                shift and go to state 146

state 114

    (154) cte -> cte_f . factor_float_push
    (157) factor_float_push -> .

    MULTIPLY        reduce using rule 157 (factor_float_push -> .)
    DIVIDE          reduce using rule 157 (factor_float_push -> .)
    PLUS            reduce using rule 157 (factor_float_push -> .)
    MINUS           reduce using rule 157 (factor_float_push -> .)
    LESS_THAN       reduce using rule 157 (factor_float_push -> .)
    GREATER_THAN    reduce using rule 157 (factor_float_push -> .)
    DIFFERENT       reduce using rule 157 (factor_float_push -> .)
    EQUAL           reduce using rule 157 (factor_float_push -> .)
    GREATER_EQUAL   reduce using rule 157 (factor_float_push -> .)
    LESS_EQUAL      reduce using rule 157 (factor_float_push -> .)
    AND             reduce using rule 157 (factor_float_push -> .)
    OR              reduce using rule 157 (factor_float_push -> .)
    RIGHT_PAR       reduce using rule 157 (factor_float_push -> .)
    SEMICOLON       reduce using rule 157 (factor_float_push -> .)
    COMMA           reduce using rule 157 (factor_float_push -> .)
    RIGHT_BR        reduce using rule 157 (factor_float_push -> .)
    TO              reduce using rule 157 (factor_float_push -> .)

    factor_float_push              shift and go to state 148

state 115

    (155) cte -> CTE_CHAR . factor_char_push
    (159) factor_char_push -> .

    MULTIPLY        reduce using rule 159 (factor_char_push -> .)
    DIVIDE          reduce using rule 159 (factor_char_push -> .)
    PLUS            reduce using rule 159 (factor_char_push -> .)
    MINUS           reduce using rule 159 (factor_char_push -> .)
    LESS_THAN       reduce using rule 159 (factor_char_push -> .)
    GREATER_THAN    reduce using rule 159 (factor_char_push -> .)
    DIFFERENT       reduce using rule 159 (factor_char_push -> .)
    EQUAL           reduce using rule 159 (factor_char_push -> .)
    GREATER_EQUAL   reduce using rule 159 (factor_char_push -> .)
    LESS_EQUAL      reduce using rule 159 (factor_char_push -> .)
    AND             reduce using rule 159 (factor_char_push -> .)
    OR              reduce using rule 159 (factor_char_push -> .)
    RIGHT_PAR       reduce using rule 159 (factor_char_push -> .)
    SEMICOLON       reduce using rule 159 (factor_char_push -> .)
    COMMA           reduce using rule 159 (factor_char_push -> .)
    RIGHT_BR        reduce using rule 159 (factor_char_push -> .)
    TO              reduce using rule 159 (factor_char_push -> .)

    factor_char_push               shift and go to state 149

state 116

    (148) condicional -> WHILE punto_while LEFT_PAR . exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 150
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 117

    (143) no_condicional -> FOR LEFT_PAR ID . punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (144) punto_for -> .

    EQUALS          reduce using rule 144 (punto_for -> .)

    punto_for                      shift and go to state 151

state 118

    (20) declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .

    MORE            reduce using rule 20 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)
    SEMICOLON       reduce using rule 20 (declaracion_inicial -> dec_varaux punto_dec_var_1 COMMA declaracion_inicial .)


state 119

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I . punto_size RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I . punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR
    (28) punto_size -> .

    RIGHT_BR        reduce using rule 28 (punto_size -> .)

    punto_size                     shift and go to state 152

state 120

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR . LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return

    LEFT_CURL       shift and go to state 153


state 121

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables count_vars estatutos RIGHT_CURL end_func
    (41) not_variables -> . variables count_vars
    (42) not_variables -> . empty
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (160) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    READ            reduce using rule 160 (empty -> .)
    WRITE           reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    FOR             reduce using rule 160 (empty -> .)

    not_variables                  shift and go to state 154
    variables                      shift and go to state 155
    empty                          shift and go to state 156

state 122

    (47) parametros -> dec_var_param COMMA parametros .

    RIGHT_PAR       reduce using rule 47 (parametros -> dec_var_param COMMA parametros .)


state 123

    (49) dec_var_param -> tipo ID punto_push_param .

    COMMA           reduce using rule 49 (dec_var_param -> tipo ID punto_push_param .)
    RIGHT_PAR       reduce using rule 49 (dec_var_param -> tipo ID punto_push_param .)


state 124

    (102) asignacion -> vars EQUALS punto_igual m_exp . punto_asignacion
    (113) punto_asignacion -> .

    SEMICOLON       reduce using rule 113 (punto_asignacion -> .)

    punto_asignacion               shift and go to state 157

state 125

    (114) llamada -> ID punto_verify_id LEFT_PAR punto_era . RIGHT_PAR punto_end_llamada
    (115) llamada -> ID punto_verify_id LEFT_PAR punto_era . dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (32) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> . m_exp punto_verify_dec_param
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    RIGHT_PAR       shift and go to state 158
    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    dec_var_llamada                shift and go to state 159
    m_exp                          shift and go to state 160
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 126

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR . punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR . punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (82) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 82 (punto_fondo_falso -> .)
    ID              reduce using rule 82 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 82 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 82 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 161

state 127

    (123) lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .

    SEMICOLON       reduce using rule 123 (lectura -> READ LEFT_PAR lectura_var RIGHT_PAR .)


state 128

    (124) lectura_var -> punto_read_stack ID . punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (125) lectura_var -> punto_read_stack ID . punto_push_dec_var punto_add_read_operand
    (126) punto_push_dec_var -> .

    COMMA           reduce using rule 126 (punto_push_dec_var -> .)
    RIGHT_PAR       reduce using rule 126 (punto_push_dec_var -> .)

    punto_push_dec_var             shift and go to state 162

state 129

    (128) escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .

    SEMICOLON       reduce using rule 128 (escritura -> WRITE LEFT_PAR escritura_aux RIGHT_PAR .)


state 130

    (129) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand
    (131) escritura_aux -> punto_write_stack STR . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (133) punto_escritura_push -> .

    COMMA           reduce using rule 133 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 133 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 163

state 131

    (130) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand
    (132) escritura_aux -> punto_write_stack m_exp . punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (133) punto_escritura_push -> .

    COMMA           reduce using rule 133 (punto_escritura_push -> .)
    RIGHT_PAR       reduce using rule 133 (punto_escritura_push -> .)

    punto_escritura_push           shift and go to state 164

state 132

    (81) factor -> LEFT_PAR punto_fondo_falso . exp_or RIGHT_PAR punto_fin_fondo_falso
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 165
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 133

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR . punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (138) punto_if_exp -> .

    LEFT_CURL       reduce using rule 138 (punto_if_exp -> .)

    punto_if_exp                   shift and go to state 166

state 134

    (54) exp_or -> t_exp punto_pop_or . t_exp_or_aux
    (55) exp_or -> t_exp punto_pop_or .
    (57) t_exp_or_aux -> . OR punto_push_or exp_or

    RIGHT_PAR       reduce using rule 55 (exp_or -> t_exp punto_pop_or .)
    OR              shift and go to state 168

    t_exp_or_aux                   shift and go to state 167

state 135

    (59) t_exp -> g_exp pop_and . t_exp_aux
    (60) t_exp -> g_exp pop_and .
    (62) t_exp_aux -> . AND punto_push_and t_exp

    OR              reduce using rule 60 (t_exp -> g_exp pop_and .)
    RIGHT_PAR       reduce using rule 60 (t_exp -> g_exp pop_and .)
    AND             shift and go to state 170

    t_exp_aux                      shift and go to state 169

state 136

    (65) g_exp -> m_exp relacionales . punto_relacionales m_exp punto_pop_relacional
    (66) punto_relacionales -> .

    LEFT_PAR        reduce using rule 66 (punto_relacionales -> .)
    ID              reduce using rule 66 (punto_relacionales -> .)
    CTE_I           reduce using rule 66 (punto_relacionales -> .)
    CTE_CHAR        reduce using rule 66 (punto_relacionales -> .)

    punto_relacionales             shift and go to state 171

state 137

    (84) relacionales -> LESS_THAN .

    LEFT_PAR        reduce using rule 84 (relacionales -> LESS_THAN .)
    ID              reduce using rule 84 (relacionales -> LESS_THAN .)
    CTE_I           reduce using rule 84 (relacionales -> LESS_THAN .)
    CTE_CHAR        reduce using rule 84 (relacionales -> LESS_THAN .)


state 138

    (85) relacionales -> GREATER_THAN .

    LEFT_PAR        reduce using rule 85 (relacionales -> GREATER_THAN .)
    ID              reduce using rule 85 (relacionales -> GREATER_THAN .)
    CTE_I           reduce using rule 85 (relacionales -> GREATER_THAN .)
    CTE_CHAR        reduce using rule 85 (relacionales -> GREATER_THAN .)


state 139

    (86) relacionales -> DIFFERENT .

    LEFT_PAR        reduce using rule 86 (relacionales -> DIFFERENT .)
    ID              reduce using rule 86 (relacionales -> DIFFERENT .)
    CTE_I           reduce using rule 86 (relacionales -> DIFFERENT .)
    CTE_CHAR        reduce using rule 86 (relacionales -> DIFFERENT .)


state 140

    (87) relacionales -> EQUAL .

    LEFT_PAR        reduce using rule 87 (relacionales -> EQUAL .)
    ID              reduce using rule 87 (relacionales -> EQUAL .)
    CTE_I           reduce using rule 87 (relacionales -> EQUAL .)
    CTE_CHAR        reduce using rule 87 (relacionales -> EQUAL .)


state 141

    (88) relacionales -> GREATER_EQUAL .

    LEFT_PAR        reduce using rule 88 (relacionales -> GREATER_EQUAL .)
    ID              reduce using rule 88 (relacionales -> GREATER_EQUAL .)
    CTE_I           reduce using rule 88 (relacionales -> GREATER_EQUAL .)
    CTE_CHAR        reduce using rule 88 (relacionales -> GREATER_EQUAL .)


state 142

    (89) relacionales -> LESS_EQUAL .

    LEFT_PAR        reduce using rule 89 (relacionales -> LESS_EQUAL .)
    ID              reduce using rule 89 (relacionales -> LESS_EQUAL .)
    CTE_I           reduce using rule 89 (relacionales -> LESS_EQUAL .)
    CTE_CHAR        reduce using rule 89 (relacionales -> LESS_EQUAL .)


state 143

    (68) m_exp -> termino punto_mexp_pop .
    (69) m_exp -> termino punto_mexp_pop . m_exp_aux
    (71) m_exp_aux -> . PLUS punto_m_exp_push m_exp
    (72) m_exp_aux -> . MINUS punto_m_exp_push m_exp

    LESS_THAN       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    GREATER_THAN    reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    DIFFERENT       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    EQUAL           reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    GREATER_EQUAL   reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    LESS_EQUAL      reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    AND             reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    OR              reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    RIGHT_PAR       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    SEMICOLON       reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    COMMA           reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    RIGHT_BR        reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    TO              reduce using rule 68 (m_exp -> termino punto_mexp_pop .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174

    m_exp_aux                      shift and go to state 172

state 144

    (74) termino -> factor punto_termino_pop .
    (75) termino -> factor punto_termino_pop . termino_aux
    (77) termino_aux -> . MULTIPLY punto_termino_aux termino
    (78) termino_aux -> . DIVIDE punto_termino_aux termino

    PLUS            reduce using rule 74 (termino -> factor punto_termino_pop .)
    MINUS           reduce using rule 74 (termino -> factor punto_termino_pop .)
    LESS_THAN       reduce using rule 74 (termino -> factor punto_termino_pop .)
    GREATER_THAN    reduce using rule 74 (termino -> factor punto_termino_pop .)
    DIFFERENT       reduce using rule 74 (termino -> factor punto_termino_pop .)
    EQUAL           reduce using rule 74 (termino -> factor punto_termino_pop .)
    GREATER_EQUAL   reduce using rule 74 (termino -> factor punto_termino_pop .)
    LESS_EQUAL      reduce using rule 74 (termino -> factor punto_termino_pop .)
    AND             reduce using rule 74 (termino -> factor punto_termino_pop .)
    OR              reduce using rule 74 (termino -> factor punto_termino_pop .)
    RIGHT_PAR       reduce using rule 74 (termino -> factor punto_termino_pop .)
    SEMICOLON       reduce using rule 74 (termino -> factor punto_termino_pop .)
    COMMA           reduce using rule 74 (termino -> factor punto_termino_pop .)
    RIGHT_BR        reduce using rule 74 (termino -> factor punto_termino_pop .)
    TO              reduce using rule 74 (termino -> factor punto_termino_pop .)
    MULTIPLY        shift and go to state 176
    DIVIDE          shift and go to state 177

    termino_aux                    shift and go to state 175

state 145

    (152) cte -> ID factor_push_operand .

    MULTIPLY        reduce using rule 152 (cte -> ID factor_push_operand .)
    DIVIDE          reduce using rule 152 (cte -> ID factor_push_operand .)
    PLUS            reduce using rule 152 (cte -> ID factor_push_operand .)
    MINUS           reduce using rule 152 (cte -> ID factor_push_operand .)
    LESS_THAN       reduce using rule 152 (cte -> ID factor_push_operand .)
    GREATER_THAN    reduce using rule 152 (cte -> ID factor_push_operand .)
    DIFFERENT       reduce using rule 152 (cte -> ID factor_push_operand .)
    EQUAL           reduce using rule 152 (cte -> ID factor_push_operand .)
    GREATER_EQUAL   reduce using rule 152 (cte -> ID factor_push_operand .)
    LESS_EQUAL      reduce using rule 152 (cte -> ID factor_push_operand .)
    AND             reduce using rule 152 (cte -> ID factor_push_operand .)
    OR              reduce using rule 152 (cte -> ID factor_push_operand .)
    RIGHT_PAR       reduce using rule 152 (cte -> ID factor_push_operand .)
    SEMICOLON       reduce using rule 152 (cte -> ID factor_push_operand .)
    COMMA           reduce using rule 152 (cte -> ID factor_push_operand .)
    RIGHT_BR        reduce using rule 152 (cte -> ID factor_push_operand .)
    TO              reduce using rule 152 (cte -> ID factor_push_operand .)


state 146

    (153) cte -> CTE_I factor_int_push .

    MULTIPLY        reduce using rule 153 (cte -> CTE_I factor_int_push .)
    DIVIDE          reduce using rule 153 (cte -> CTE_I factor_int_push .)
    PLUS            reduce using rule 153 (cte -> CTE_I factor_int_push .)
    MINUS           reduce using rule 153 (cte -> CTE_I factor_int_push .)
    LESS_THAN       reduce using rule 153 (cte -> CTE_I factor_int_push .)
    GREATER_THAN    reduce using rule 153 (cte -> CTE_I factor_int_push .)
    DIFFERENT       reduce using rule 153 (cte -> CTE_I factor_int_push .)
    EQUAL           reduce using rule 153 (cte -> CTE_I factor_int_push .)
    GREATER_EQUAL   reduce using rule 153 (cte -> CTE_I factor_int_push .)
    LESS_EQUAL      reduce using rule 153 (cte -> CTE_I factor_int_push .)
    AND             reduce using rule 153 (cte -> CTE_I factor_int_push .)
    OR              reduce using rule 153 (cte -> CTE_I factor_int_push .)
    RIGHT_PAR       reduce using rule 153 (cte -> CTE_I factor_int_push .)
    SEMICOLON       reduce using rule 153 (cte -> CTE_I factor_int_push .)
    COMMA           reduce using rule 153 (cte -> CTE_I factor_int_push .)
    RIGHT_BR        reduce using rule 153 (cte -> CTE_I factor_int_push .)
    TO              reduce using rule 153 (cte -> CTE_I factor_int_push .)


state 147

    (1) cte_f -> CTE_I DOT . CTE_I

    CTE_I           shift and go to state 178


state 148

    (154) cte -> cte_f factor_float_push .

    MULTIPLY        reduce using rule 154 (cte -> cte_f factor_float_push .)
    DIVIDE          reduce using rule 154 (cte -> cte_f factor_float_push .)
    PLUS            reduce using rule 154 (cte -> cte_f factor_float_push .)
    MINUS           reduce using rule 154 (cte -> cte_f factor_float_push .)
    LESS_THAN       reduce using rule 154 (cte -> cte_f factor_float_push .)
    GREATER_THAN    reduce using rule 154 (cte -> cte_f factor_float_push .)
    DIFFERENT       reduce using rule 154 (cte -> cte_f factor_float_push .)
    EQUAL           reduce using rule 154 (cte -> cte_f factor_float_push .)
    GREATER_EQUAL   reduce using rule 154 (cte -> cte_f factor_float_push .)
    LESS_EQUAL      reduce using rule 154 (cte -> cte_f factor_float_push .)
    AND             reduce using rule 154 (cte -> cte_f factor_float_push .)
    OR              reduce using rule 154 (cte -> cte_f factor_float_push .)
    RIGHT_PAR       reduce using rule 154 (cte -> cte_f factor_float_push .)
    SEMICOLON       reduce using rule 154 (cte -> cte_f factor_float_push .)
    COMMA           reduce using rule 154 (cte -> cte_f factor_float_push .)
    RIGHT_BR        reduce using rule 154 (cte -> cte_f factor_float_push .)
    TO              reduce using rule 154 (cte -> cte_f factor_float_push .)


state 149

    (155) cte -> CTE_CHAR factor_char_push .

    MULTIPLY        reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    DIVIDE          reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    PLUS            reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    MINUS           reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    LESS_THAN       reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    GREATER_THAN    reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    DIFFERENT       reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    EQUAL           reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    GREATER_EQUAL   reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    LESS_EQUAL      reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    AND             reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    OR              reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    RIGHT_PAR       reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    SEMICOLON       reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    COMMA           reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    RIGHT_BR        reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)
    TO              reduce using rule 155 (cte -> CTE_CHAR factor_char_push .)


state 150

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or . RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while

    RIGHT_PAR       shift and go to state 179


state 151

    (143) no_condicional -> FOR LEFT_PAR ID punto_for . EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    EQUALS          shift and go to state 180


state 152

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size . RIGHT_BR
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size . RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR

    RIGHT_BR        shift and go to state 181


state 153

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL . not_variables estatutos RIGHT_CURL punto_end_function_return
    (41) not_variables -> . variables count_vars
    (42) not_variables -> . empty
    (12) variables -> . VAR punto_variables_1 SEMICOLON
    (13) variables -> . VAR punto_variables_1 variables_aux SEMICOLON
    (160) empty -> .

    VAR             shift and go to state 10
    RETURN          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    READ            reduce using rule 160 (empty -> .)
    WRITE           reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    FOR             reduce using rule 160 (empty -> .)

    not_variables                  shift and go to state 182
    variables                      shift and go to state 155
    empty                          shift and go to state 156

state 154

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . count_vars estatutos RIGHT_CURL end_func
    (52) count_vars -> .

    RETURN          reduce using rule 52 (count_vars -> .)
    ID              reduce using rule 52 (count_vars -> .)
    READ            reduce using rule 52 (count_vars -> .)
    WRITE           reduce using rule 52 (count_vars -> .)
    IF              reduce using rule 52 (count_vars -> .)
    WHILE           reduce using rule 52 (count_vars -> .)
    FOR             reduce using rule 52 (count_vars -> .)

    count_vars                     shift and go to state 183

state 155

    (41) not_variables -> variables . count_vars
    (52) count_vars -> .

    RETURN          reduce using rule 52 (count_vars -> .)
    ID              reduce using rule 52 (count_vars -> .)
    READ            reduce using rule 52 (count_vars -> .)
    WRITE           reduce using rule 52 (count_vars -> .)
    IF              reduce using rule 52 (count_vars -> .)
    WHILE           reduce using rule 52 (count_vars -> .)
    FOR             reduce using rule 52 (count_vars -> .)

    count_vars                     shift and go to state 184

state 156

    (42) not_variables -> empty .

    RETURN          reduce using rule 42 (not_variables -> empty .)
    ID              reduce using rule 42 (not_variables -> empty .)
    READ            reduce using rule 42 (not_variables -> empty .)
    WRITE           reduce using rule 42 (not_variables -> empty .)
    IF              reduce using rule 42 (not_variables -> empty .)
    WHILE           reduce using rule 42 (not_variables -> empty .)
    FOR             reduce using rule 42 (not_variables -> empty .)


state 157

    (102) asignacion -> vars EQUALS punto_igual m_exp punto_asignacion .

    SEMICOLON       reduce using rule 102 (asignacion -> vars EQUALS punto_igual m_exp punto_asignacion .)


state 158

    (114) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR . punto_end_llamada
    (118) punto_end_llamada -> .

    SEMICOLON       reduce using rule 118 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 185

state 159

    (115) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada . RIGHT_PAR punto_verify_total_params punto_end_llamada

    RIGHT_PAR       shift and go to state 186


state 160

    (32) dec_var_llamada -> m_exp . punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> m_exp . punto_verify_dec_param
    (35) punto_verify_dec_param -> .

    COMMA           reduce using rule 35 (punto_verify_dec_param -> .)
    RIGHT_PAR       reduce using rule 35 (punto_verify_dec_param -> .)

    punto_verify_dec_param         shift and go to state 187

state 161

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso . m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso . m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 188
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 162

    (124) lectura_var -> punto_read_stack ID punto_push_dec_var . punto_add_read_operand COMMA lectura_var
    (125) lectura_var -> punto_read_stack ID punto_push_dec_var . punto_add_read_operand
    (127) punto_add_read_operand -> .

    COMMA           reduce using rule 127 (punto_add_read_operand -> .)
    RIGHT_PAR       reduce using rule 127 (punto_add_read_operand -> .)

    punto_add_read_operand         shift and go to state 189

state 163

    (129) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand
    (131) escritura_aux -> punto_write_stack STR punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (135) punto_add_write_operand -> .

    COMMA           reduce using rule 135 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 135 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 190

state 164

    (130) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand
    (132) escritura_aux -> punto_write_stack m_exp punto_escritura_push . punto_add_write_operand COMMA escritura_aux
    (135) punto_add_write_operand -> .

    COMMA           reduce using rule 135 (punto_add_write_operand -> .)
    RIGHT_PAR       reduce using rule 135 (punto_add_write_operand -> .)

    punto_add_write_operand        shift and go to state 191

state 165

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or . RIGHT_PAR punto_fin_fondo_falso

    RIGHT_PAR       shift and go to state 192


state 166

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp . LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 193


state 167

    (54) exp_or -> t_exp punto_pop_or t_exp_or_aux .

    RIGHT_PAR       reduce using rule 54 (exp_or -> t_exp punto_pop_or t_exp_or_aux .)


state 168

    (57) t_exp_or_aux -> OR . punto_push_or exp_or
    (58) punto_push_or -> .

    LEFT_PAR        reduce using rule 58 (punto_push_or -> .)
    ID              reduce using rule 58 (punto_push_or -> .)
    CTE_I           reduce using rule 58 (punto_push_or -> .)
    CTE_CHAR        reduce using rule 58 (punto_push_or -> .)

    punto_push_or                  shift and go to state 194

state 169

    (59) t_exp -> g_exp pop_and t_exp_aux .

    OR              reduce using rule 59 (t_exp -> g_exp pop_and t_exp_aux .)
    RIGHT_PAR       reduce using rule 59 (t_exp -> g_exp pop_and t_exp_aux .)


state 170

    (62) t_exp_aux -> AND . punto_push_and t_exp
    (63) punto_push_and -> .

    LEFT_PAR        reduce using rule 63 (punto_push_and -> .)
    ID              reduce using rule 63 (punto_push_and -> .)
    CTE_I           reduce using rule 63 (punto_push_and -> .)
    CTE_CHAR        reduce using rule 63 (punto_push_and -> .)

    punto_push_and                 shift and go to state 195

state 171

    (65) g_exp -> m_exp relacionales punto_relacionales . m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 196
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 172

    (69) m_exp -> termino punto_mexp_pop m_exp_aux .

    LESS_THAN       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_THAN    reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    DIFFERENT       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    EQUAL           reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    GREATER_EQUAL   reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    LESS_EQUAL      reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    AND             reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    OR              reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    RIGHT_PAR       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    SEMICOLON       reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    COMMA           reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    RIGHT_BR        reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)
    TO              reduce using rule 69 (m_exp -> termino punto_mexp_pop m_exp_aux .)


state 173

    (71) m_exp_aux -> PLUS . punto_m_exp_push m_exp
    (73) punto_m_exp_push -> .

    LEFT_PAR        reduce using rule 73 (punto_m_exp_push -> .)
    ID              reduce using rule 73 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 73 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 73 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 197

state 174

    (72) m_exp_aux -> MINUS . punto_m_exp_push m_exp
    (73) punto_m_exp_push -> .

    LEFT_PAR        reduce using rule 73 (punto_m_exp_push -> .)
    ID              reduce using rule 73 (punto_m_exp_push -> .)
    CTE_I           reduce using rule 73 (punto_m_exp_push -> .)
    CTE_CHAR        reduce using rule 73 (punto_m_exp_push -> .)

    punto_m_exp_push               shift and go to state 198

state 175

    (75) termino -> factor punto_termino_pop termino_aux .

    PLUS            reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    MINUS           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    LESS_THAN       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_THAN    reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    DIFFERENT       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    EQUAL           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    GREATER_EQUAL   reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    LESS_EQUAL      reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    AND             reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    OR              reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    RIGHT_PAR       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    SEMICOLON       reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    COMMA           reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    RIGHT_BR        reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)
    TO              reduce using rule 75 (termino -> factor punto_termino_pop termino_aux .)


state 176

    (77) termino_aux -> MULTIPLY . punto_termino_aux termino
    (79) punto_termino_aux -> .

    LEFT_PAR        reduce using rule 79 (punto_termino_aux -> .)
    ID              reduce using rule 79 (punto_termino_aux -> .)
    CTE_I           reduce using rule 79 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 79 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 199

state 177

    (78) termino_aux -> DIVIDE . punto_termino_aux termino
    (79) punto_termino_aux -> .

    LEFT_PAR        reduce using rule 79 (punto_termino_aux -> .)
    ID              reduce using rule 79 (punto_termino_aux -> .)
    CTE_I           reduce using rule 79 (punto_termino_aux -> .)
    CTE_CHAR        reduce using rule 79 (punto_termino_aux -> .)

    punto_termino_aux              shift and go to state 200

state 178

    (1) cte_f -> CTE_I DOT CTE_I .

    MULTIPLY        reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIVIDE          reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    PLUS            reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    MINUS           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_THAN       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_THAN    reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    DIFFERENT       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    EQUAL           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    GREATER_EQUAL   reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    LESS_EQUAL      reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    AND             reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    OR              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    RIGHT_PAR       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    SEMICOLON       reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    COMMA           reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    RIGHT_BR        reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)
    TO              reduce using rule 1 (cte_f -> CTE_I DOT CTE_I .)


state 179

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR . punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (150) punto_validar_exp -> .

    LEFT_CURL       reduce using rule 150 (punto_validar_exp -> .)

    punto_validar_exp              shift and go to state 201

state 180

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS . m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 202
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 181

    (25) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR .
    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR . LEFT_BR CTE_I punto_size RIGHT_BR

    COMMA           reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR .)
    MORE            reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR .)
    SEMICOLON       reduce using rule 25 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR .)
    LEFT_BR         shift and go to state 203


state 182

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables . estatutos RIGHT_CURL punto_end_function_return
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 204
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 183

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars . estatutos RIGHT_CURL end_func
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 209
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 184

    (41) not_variables -> variables count_vars .

    RETURN          reduce using rule 41 (not_variables -> variables count_vars .)
    ID              reduce using rule 41 (not_variables -> variables count_vars .)
    READ            reduce using rule 41 (not_variables -> variables count_vars .)
    WRITE           reduce using rule 41 (not_variables -> variables count_vars .)
    IF              reduce using rule 41 (not_variables -> variables count_vars .)
    WHILE           reduce using rule 41 (not_variables -> variables count_vars .)
    FOR             reduce using rule 41 (not_variables -> variables count_vars .)


state 185

    (114) llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .

    SEMICOLON       reduce using rule 114 (llamada -> ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada .)


state 186

    (115) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR . punto_verify_total_params punto_end_llamada
    (117) punto_verify_total_params -> .

    SEMICOLON       reduce using rule 117 (punto_verify_total_params -> .)

    punto_verify_total_params      shift and go to state 210

state 187

    (32) dec_var_llamada -> m_exp punto_verify_dec_param . COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> m_exp punto_verify_dec_param .

    COMMA           shift and go to state 211
    RIGHT_PAR       reduce using rule 33 (dec_var_llamada -> m_exp punto_verify_dec_param .)


state 188

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp . punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp . punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (109) punto_access_arr -> .

    RIGHT_BR        reduce using rule 109 (punto_access_arr -> .)

    punto_access_arr               shift and go to state 212

state 189

    (124) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand . COMMA lectura_var
    (125) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand .

    COMMA           shift and go to state 213
    RIGHT_PAR       reduce using rule 125 (lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand .)


state 190

    (129) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .
    (131) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 129 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 214


state 191

    (130) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .
    (132) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand . COMMA escritura_aux

    RIGHT_PAR       reduce using rule 130 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand .)
    COMMA           shift and go to state 215


state 192

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR . punto_fin_fondo_falso
    (83) punto_fin_fondo_falso -> .

    MULTIPLY        reduce using rule 83 (punto_fin_fondo_falso -> .)
    DIVIDE          reduce using rule 83 (punto_fin_fondo_falso -> .)
    PLUS            reduce using rule 83 (punto_fin_fondo_falso -> .)
    MINUS           reduce using rule 83 (punto_fin_fondo_falso -> .)
    LESS_THAN       reduce using rule 83 (punto_fin_fondo_falso -> .)
    GREATER_THAN    reduce using rule 83 (punto_fin_fondo_falso -> .)
    DIFFERENT       reduce using rule 83 (punto_fin_fondo_falso -> .)
    EQUAL           reduce using rule 83 (punto_fin_fondo_falso -> .)
    GREATER_EQUAL   reduce using rule 83 (punto_fin_fondo_falso -> .)
    LESS_EQUAL      reduce using rule 83 (punto_fin_fondo_falso -> .)
    AND             reduce using rule 83 (punto_fin_fondo_falso -> .)
    OR              reduce using rule 83 (punto_fin_fondo_falso -> .)
    RIGHT_PAR       reduce using rule 83 (punto_fin_fondo_falso -> .)
    SEMICOLON       reduce using rule 83 (punto_fin_fondo_falso -> .)
    COMMA           reduce using rule 83 (punto_fin_fondo_falso -> .)
    RIGHT_BR        reduce using rule 83 (punto_fin_fondo_falso -> .)
    TO              reduce using rule 83 (punto_fin_fondo_falso -> .)

    punto_fin_fondo_falso          shift and go to state 216

state 193

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL . estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 217
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 194

    (57) t_exp_or_aux -> OR punto_push_or . exp_or
    (54) exp_or -> . t_exp punto_pop_or t_exp_or_aux
    (55) exp_or -> . t_exp punto_pop_or
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    exp_or                         shift and go to state 218
    t_exp                          shift and go to state 106
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 195

    (62) t_exp_aux -> AND punto_push_and . t_exp
    (59) t_exp -> . g_exp pop_and t_exp_aux
    (60) t_exp -> . g_exp pop_and
    (64) g_exp -> . m_exp
    (65) g_exp -> . m_exp relacionales punto_relacionales m_exp punto_pop_relacional
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    t_exp                          shift and go to state 219
    g_exp                          shift and go to state 107
    m_exp                          shift and go to state 108
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 196

    (65) g_exp -> m_exp relacionales punto_relacionales m_exp . punto_pop_relacional
    (67) punto_pop_relacional -> .

    AND             reduce using rule 67 (punto_pop_relacional -> .)
    OR              reduce using rule 67 (punto_pop_relacional -> .)
    RIGHT_PAR       reduce using rule 67 (punto_pop_relacional -> .)

    punto_pop_relacional           shift and go to state 220

state 197

    (71) m_exp_aux -> PLUS punto_m_exp_push . m_exp
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 221
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 198

    (72) m_exp_aux -> MINUS punto_m_exp_push . m_exp
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 222
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 199

    (77) termino_aux -> MULTIPLY punto_termino_aux . termino
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    termino                        shift and go to state 223
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 200

    (78) termino_aux -> DIVIDE punto_termino_aux . termino
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    termino                        shift and go to state 224
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 201

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp . LEFT_CURL estatutos RIGHT_CURL punto_end_while

    LEFT_CURL       shift and go to state 225


state 202

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp . punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (145) punto_exp_for_inf -> .

    TO              reduce using rule 145 (punto_exp_for_inf -> .)

    punto_exp_for_inf              shift and go to state 226

state 203

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR . CTE_I punto_size RIGHT_BR

    CTE_I           shift and go to state 227


state 204

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos . RIGHT_CURL punto_end_function_return

    RIGHT_CURL      shift and go to state 228


state 205

    (90) estatutos -> estatutos_main_aux .

    RIGHT_CURL      reduce using rule 90 (estatutos -> estatutos_main_aux .)


state 206

    (91) estatutos -> retorno . SEMICOLON

    SEMICOLON       shift and go to state 229


state 207

    (100) estatutos_main_aux -> estatutos_main . estatutos
    (101) estatutos_main_aux -> estatutos_main .
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_CURL      reduce using rule 101 (estatutos_main_aux -> estatutos_main .)
    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos_main                 shift and go to state 207
    estatutos                      shift and go to state 230
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 208

    (120) retorno -> RETURN . LEFT_PAR m_exp RIGHT_PAR punto_return

    LEFT_PAR        shift and go to state 231


state 209

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos . RIGHT_CURL end_func

    RIGHT_CURL      shift and go to state 232


state 210

    (115) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params . punto_end_llamada
    (118) punto_end_llamada -> .

    SEMICOLON       reduce using rule 118 (punto_end_llamada -> .)

    punto_end_llamada              shift and go to state 233

state 211

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA . punto_mas_k dec_var_llamada
    (34) punto_mas_k -> .

    LEFT_PAR        reduce using rule 34 (punto_mas_k -> .)
    ID              reduce using rule 34 (punto_mas_k -> .)
    CTE_I           reduce using rule 34 (punto_mas_k -> .)
    CTE_CHAR        reduce using rule 34 (punto_mas_k -> .)

    punto_mas_k                    shift and go to state 234

state 212

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr . RIGHT_BR punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr . RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz

    RIGHT_BR        shift and go to state 235


state 213

    (124) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA . lectura_var
    (124) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var
    (125) lectura_var -> . punto_read_stack ID punto_push_dec_var punto_add_read_operand
    (122) punto_read_stack -> .

    ID              reduce using rule 122 (punto_read_stack -> .)

    punto_read_stack               shift and go to state 101
    lectura_var                    shift and go to state 236

state 214

    (131) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (129) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (130) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (131) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (132) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (134) punto_write_stack -> .

    STR             reduce using rule 134 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 134 (punto_write_stack -> .)
    ID              reduce using rule 134 (punto_write_stack -> .)
    CTE_I           reduce using rule 134 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 134 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 103
    escritura_aux                  shift and go to state 237

state 215

    (132) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA . escritura_aux
    (129) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand
    (130) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand
    (131) escritura_aux -> . punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (132) escritura_aux -> . punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux
    (134) punto_write_stack -> .

    STR             reduce using rule 134 (punto_write_stack -> .)
    LEFT_PAR        reduce using rule 134 (punto_write_stack -> .)
    ID              reduce using rule 134 (punto_write_stack -> .)
    CTE_I           reduce using rule 134 (punto_write_stack -> .)
    CTE_CHAR        reduce using rule 134 (punto_write_stack -> .)

    punto_write_stack              shift and go to state 103
    escritura_aux                  shift and go to state 238

state 216

    (81) factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .

    MULTIPLY        reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    DIVIDE          reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    PLUS            reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    MINUS           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    LESS_THAN       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    GREATER_THAN    reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    DIFFERENT       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    EQUAL           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    GREATER_EQUAL   reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    LESS_EQUAL      reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    AND             reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    OR              reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    RIGHT_PAR       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    SEMICOLON       reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    COMMA           reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    RIGHT_BR        reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)
    TO              reduce using rule 81 (factor -> LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso .)


state 217

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos . RIGHT_CURL punto_end_if
    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos . RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 239


state 218

    (57) t_exp_or_aux -> OR punto_push_or exp_or .

    RIGHT_PAR       reduce using rule 57 (t_exp_or_aux -> OR punto_push_or exp_or .)


state 219

    (62) t_exp_aux -> AND punto_push_and t_exp .

    OR              reduce using rule 62 (t_exp_aux -> AND punto_push_and t_exp .)
    RIGHT_PAR       reduce using rule 62 (t_exp_aux -> AND punto_push_and t_exp .)


state 220

    (65) g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .

    AND             reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    OR              reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)
    RIGHT_PAR       reduce using rule 65 (g_exp -> m_exp relacionales punto_relacionales m_exp punto_pop_relacional .)


state 221

    (71) m_exp_aux -> PLUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    AND             reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    OR              reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    RIGHT_BR        reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)
    TO              reduce using rule 71 (m_exp_aux -> PLUS punto_m_exp_push m_exp .)


state 222

    (72) m_exp_aux -> MINUS punto_m_exp_push m_exp .

    LESS_THAN       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_THAN    reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    DIFFERENT       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    EQUAL           reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    GREATER_EQUAL   reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    LESS_EQUAL      reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    AND             reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    OR              reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    RIGHT_PAR       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    SEMICOLON       reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    COMMA           reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    RIGHT_BR        reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)
    TO              reduce using rule 72 (m_exp_aux -> MINUS punto_m_exp_push m_exp .)


state 223

    (77) termino_aux -> MULTIPLY punto_termino_aux termino .

    PLUS            reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    MINUS           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_THAN       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    DIFFERENT       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    EQUAL           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    AND             reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    OR              reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    SEMICOLON       reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    COMMA           reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    RIGHT_BR        reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)
    TO              reduce using rule 77 (termino_aux -> MULTIPLY punto_termino_aux termino .)


state 224

    (78) termino_aux -> DIVIDE punto_termino_aux termino .

    PLUS            reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    MINUS           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_THAN       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_THAN    reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    DIFFERENT       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    EQUAL           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    GREATER_EQUAL   reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    LESS_EQUAL      reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    AND             reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    OR              reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    RIGHT_PAR       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    SEMICOLON       reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    COMMA           reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    RIGHT_BR        reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)
    TO              reduce using rule 78 (termino_aux -> DIVIDE punto_termino_aux termino .)


state 225

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL . estatutos RIGHT_CURL punto_end_while
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 240
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 226

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf . TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    TO              shift and go to state 241


state 227

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I . punto_size RIGHT_BR
    (28) punto_size -> .

    RIGHT_BR        reduce using rule 28 (punto_size -> .)

    punto_size                     shift and go to state 242

state 228

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL . punto_end_function_return
    (45) punto_end_function_return -> .

    VOID            reduce using rule 45 (punto_end_function_return -> .)
    INT             reduce using rule 45 (punto_end_function_return -> .)
    FLOAT           reduce using rule 45 (punto_end_function_return -> .)
    CHAR            reduce using rule 45 (punto_end_function_return -> .)
    MAIN            reduce using rule 45 (punto_end_function_return -> .)

    punto_end_function_return      shift and go to state 243

state 229

    (91) estatutos -> retorno SEMICOLON .

    RIGHT_CURL      reduce using rule 91 (estatutos -> retorno SEMICOLON .)


state 230

    (100) estatutos_main_aux -> estatutos_main estatutos .

    RIGHT_CURL      reduce using rule 100 (estatutos_main_aux -> estatutos_main estatutos .)


state 231

    (120) retorno -> RETURN LEFT_PAR . m_exp RIGHT_PAR punto_return
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 244
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 232

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL . end_func
    (53) end_func -> .

    VOID            reduce using rule 53 (end_func -> .)
    INT             reduce using rule 53 (end_func -> .)
    FLOAT           reduce using rule 53 (end_func -> .)
    CHAR            reduce using rule 53 (end_func -> .)
    MAIN            reduce using rule 53 (end_func -> .)

    end_func                       shift and go to state 245

state 233

    (115) llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .

    SEMICOLON       reduce using rule 115 (llamada -> ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada .)


state 234

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k . dec_var_llamada
    (32) dec_var_llamada -> . m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada
    (33) dec_var_llamada -> . m_exp punto_verify_dec_param
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 160
    dec_var_llamada                shift and go to state 246
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 235

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR . punto_verify_arr
    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR . punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (110) punto_verify_arr -> .
    (107) punto_dimension_2 -> .

    EQUALS          reduce using rule 110 (punto_verify_arr -> .)
    LEFT_BR         reduce using rule 107 (punto_dimension_2 -> .)

    punto_verify_arr               shift and go to state 247
    punto_dimension_2              shift and go to state 248

state 236

    (124) lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var .

    RIGHT_PAR       reduce using rule 124 (lectura_var -> punto_read_stack ID punto_push_dec_var punto_add_read_operand COMMA lectura_var .)


state 237

    (131) escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 131 (escritura_aux -> punto_write_stack STR punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 238

    (132) escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .

    RIGHT_PAR       reduce using rule 132 (escritura_aux -> punto_write_stack m_exp punto_escritura_push punto_add_write_operand COMMA escritura_aux .)


state 239

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL . ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (140) punto_end_if -> .

    ELSE            shift and go to state 250
    SEMICOLON       reduce using rule 140 (punto_end_if -> .)

    punto_end_if                   shift and go to state 249

state 240

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos . RIGHT_CURL punto_end_while

    RIGHT_CURL      shift and go to state 251


state 241

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO . m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 252
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 242

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size . RIGHT_BR

    RIGHT_BR        shift and go to state 253


state 243

    (38) funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .

    VOID            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    INT             reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    FLOAT           reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    CHAR            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)
    MAIN            reduce using rule 38 (funciones_aux -> tipo FUNC ID punto_id_func punto_return_value LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables estatutos RIGHT_CURL punto_end_function_return .)


state 244

    (120) retorno -> RETURN LEFT_PAR m_exp . RIGHT_PAR punto_return

    RIGHT_PAR       shift and go to state 254


state 245

    (39) funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .

    VOID            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    INT             reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    FLOAT           reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    CHAR            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)
    MAIN            reduce using rule 39 (funciones_aux -> VOID FUNC ID punto_id_func LEFT_PAR not_params RIGHT_PAR LEFT_CURL not_variables count_vars estatutos RIGHT_CURL end_func .)


state 246

    (32) dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .

    RIGHT_PAR       reduce using rule 32 (dec_var_llamada -> m_exp punto_verify_dec_param COMMA punto_mas_k dec_var_llamada .)


state 247

    (104) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr .

    EQUALS          reduce using rule 104 (vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr .)


state 248

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 . LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz

    LEFT_BR         shift and go to state 255


state 249

    (136) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 136 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 250

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE . punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (139) punto_else -> .

    LEFT_CURL       reduce using rule 139 (punto_else -> .)

    punto_else                     shift and go to state 256

state 251

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL . punto_end_while
    (151) punto_end_while -> .

    SEMICOLON       reduce using rule 151 (punto_end_while -> .)

    punto_end_while                shift and go to state 257

state 252

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp . punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for
    (146) punto_exp_for_sup -> .

    RIGHT_PAR       reduce using rule 146 (punto_exp_for_sup -> .)

    punto_exp_for_sup              shift and go to state 258

state 253

    (26) dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR .

    COMMA           reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR .)
    MORE            reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR .)
    SEMICOLON       reduce using rule 26 (dec_var_dimension -> ID LEFT_BR punto_is_array CTE_I punto_size RIGHT_BR LEFT_BR CTE_I punto_size RIGHT_BR .)


state 254

    (120) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR . punto_return
    (121) punto_return -> .

    SEMICOLON       reduce using rule 121 (punto_return -> .)

    punto_return                   shift and go to state 259

state 255

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR . punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (82) punto_fondo_falso -> .

    LEFT_PAR        reduce using rule 82 (punto_fondo_falso -> .)
    ID              reduce using rule 82 (punto_fondo_falso -> .)
    CTE_I           reduce using rule 82 (punto_fondo_falso -> .)
    CTE_CHAR        reduce using rule 82 (punto_fondo_falso -> .)

    punto_fondo_falso              shift and go to state 260

state 256

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else . LEFT_CURL estatutos RIGHT_CURL punto_end_if

    LEFT_CURL       shift and go to state 261


state 257

    (148) condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .

    SEMICOLON       reduce using rule 148 (condicional -> WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while .)


state 258

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup . RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RIGHT_PAR       shift and go to state 262


state 259

    (120) retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .

    SEMICOLON       reduce using rule 120 (retorno -> RETURN LEFT_PAR m_exp RIGHT_PAR punto_return .)


state 260

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso . m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (68) m_exp -> . termino punto_mexp_pop
    (69) m_exp -> . termino punto_mexp_pop m_exp_aux
    (74) termino -> . factor punto_termino_pop
    (75) termino -> . factor punto_termino_pop termino_aux
    (80) factor -> . cte
    (81) factor -> . LEFT_PAR punto_fondo_falso exp_or RIGHT_PAR punto_fin_fondo_falso
    (152) cte -> . ID factor_push_operand
    (153) cte -> . CTE_I factor_int_push
    (154) cte -> . cte_f factor_float_push
    (155) cte -> . CTE_CHAR factor_char_push
    (1) cte_f -> . CTE_I DOT CTE_I

    LEFT_PAR        shift and go to state 104
    ID              shift and go to state 112
    CTE_I           shift and go to state 113
    CTE_CHAR        shift and go to state 115

    m_exp                          shift and go to state 263
    termino                        shift and go to state 109
    factor                         shift and go to state 110
    cte                            shift and go to state 111
    cte_f                          shift and go to state 114

state 261

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL . estatutos RIGHT_CURL punto_end_if
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 264
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 262

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR . LEFT_CURL estatutos RIGHT_CURL punto_end_for

    LEFT_CURL       shift and go to state 265


state 263

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp . punto_access_arr RIGHT_BR punto_verify_matriz
    (109) punto_access_arr -> .

    RIGHT_BR        reduce using rule 109 (punto_access_arr -> .)

    punto_access_arr               shift and go to state 266

state 264

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos . RIGHT_CURL punto_end_if

    RIGHT_CURL      shift and go to state 267


state 265

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL . estatutos RIGHT_CURL punto_end_for
    (90) estatutos -> . estatutos_main_aux
    (91) estatutos -> . retorno SEMICOLON
    (100) estatutos_main_aux -> . estatutos_main estatutos
    (101) estatutos_main_aux -> . estatutos_main
    (120) retorno -> . RETURN LEFT_PAR m_exp RIGHT_PAR punto_return
    (92) estatutos_main -> . asignacion SEMICOLON
    (93) estatutos_main -> . llamada SEMICOLON
    (94) estatutos_main -> . lectura SEMICOLON
    (95) estatutos_main -> . escritura SEMICOLON
    (96) estatutos_main -> . decision SEMICOLON
    (97) estatutos_main -> . repeticion SEMICOLON
    (102) asignacion -> . vars EQUALS punto_igual m_exp punto_asignacion
    (114) llamada -> . ID punto_verify_id LEFT_PAR punto_era RIGHT_PAR punto_end_llamada
    (115) llamada -> . ID punto_verify_id LEFT_PAR punto_era dec_var_llamada RIGHT_PAR punto_verify_total_params punto_end_llamada
    (123) lectura -> . READ LEFT_PAR lectura_var RIGHT_PAR
    (128) escritura -> . WRITE LEFT_PAR escritura_aux RIGHT_PAR
    (136) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (137) decision -> . IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if
    (141) repeticion -> . condicional
    (142) repeticion -> . no_condicional
    (103) vars -> . ID punto_asignacion_var
    (104) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_arr
    (105) vars -> . ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz
    (148) condicional -> . WHILE punto_while LEFT_PAR exp_or RIGHT_PAR punto_validar_exp LEFT_CURL estatutos RIGHT_CURL punto_end_while
    (143) no_condicional -> . FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for

    RETURN          shift and go to state 208
    ID              shift and go to state 55
    READ            shift and go to state 56
    WRITE           shift and go to state 57
    IF              shift and go to state 58
    WHILE           shift and go to state 61
    FOR             shift and go to state 62

    estatutos                      shift and go to state 268
    estatutos_main_aux             shift and go to state 205
    retorno                        shift and go to state 206
    estatutos_main                 shift and go to state 207
    asignacion                     shift and go to state 48
    llamada                        shift and go to state 49
    lectura                        shift and go to state 50
    escritura                      shift and go to state 51
    decision                       shift and go to state 52
    repeticion                     shift and go to state 53
    vars                           shift and go to state 54
    condicional                    shift and go to state 59
    no_condicional                 shift and go to state 60

state 266

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr . RIGHT_BR punto_verify_matriz

    RIGHT_BR        shift and go to state 269


state 267

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL . punto_end_if
    (140) punto_end_if -> .

    SEMICOLON       reduce using rule 140 (punto_end_if -> .)

    punto_end_if                   shift and go to state 270

state 268

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos . RIGHT_CURL punto_end_for

    RIGHT_CURL      shift and go to state 271


state 269

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR . punto_verify_matriz
    (106) punto_verify_matriz -> .

    EQUALS          reduce using rule 106 (punto_verify_matriz -> .)

    punto_verify_matriz            shift and go to state 272

state 270

    (137) decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .

    SEMICOLON       reduce using rule 137 (decision -> IF LEFT_PAR exp_or RIGHT_PAR punto_if_exp LEFT_CURL estatutos RIGHT_CURL ELSE punto_else LEFT_CURL estatutos RIGHT_CURL punto_end_if .)


state 271

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL . punto_end_for
    (147) punto_end_for -> .

    SEMICOLON       reduce using rule 147 (punto_end_for -> .)

    punto_end_for                  shift and go to state 273

state 272

    (105) vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz .

    EQUALS          reduce using rule 105 (vars -> ID punto_asignacion_var punto_get_size LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_dimension_2 LEFT_BR punto_fondo_falso m_exp punto_access_arr RIGHT_BR punto_verify_matriz .)


state 273

    (143) no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .

    SEMICOLON       reduce using rule 143 (no_condicional -> FOR LEFT_PAR ID punto_for EQUALS m_exp punto_exp_for_inf TO m_exp punto_exp_for_sup RIGHT_PAR LEFT_CURL estatutos RIGHT_CURL punto_end_for .)

